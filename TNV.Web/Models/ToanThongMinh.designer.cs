#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TNV.Web.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ToanThongMinh")]
	public partial class ToanThongMinhDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void InsertUserProperty(UserProperty instance);
    partial void UpdateUserProperty(UserProperty instance);
    partial void DeleteUserProperty(UserProperty instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertHuyenThanhThi(HuyenThanhThi instance);
    partial void UpdateHuyenThanhThi(HuyenThanhThi instance);
    partial void DeleteHuyenThanhThi(HuyenThanhThi instance);
    partial void InsertNewsCategory(NewsCategory instance);
    partial void UpdateNewsCategory(NewsCategory instance);
    partial void DeleteNewsCategory(NewsCategory instance);
    partial void InsertSchoolList(SchoolList instance);
    partial void UpdateSchoolList(SchoolList instance);
    partial void DeleteSchoolList(SchoolList instance);
    partial void InsertTinhThanhPho(TinhThanhPho instance);
    partial void UpdateTinhThanhPho(TinhThanhPho instance);
    partial void DeleteTinhThanhPho(TinhThanhPho instance);
    partial void InsertNewsContent(NewsContent instance);
    partial void UpdateNewsContent(NewsContent instance);
    partial void DeleteNewsContent(NewsContent instance);
    partial void InsertMathKindList(MathKindList instance);
    partial void UpdateMathKindList(MathKindList instance);
    partial void DeleteMathKindList(MathKindList instance);
    partial void InsertExerKind(ExerKind instance);
    partial void UpdateExerKind(ExerKind instance);
    partial void DeleteExerKind(ExerKind instance);
    partial void InsertCleverExerKind(CleverExerKind instance);
    partial void UpdateCleverExerKind(CleverExerKind instance);
    partial void DeleteCleverExerKind(CleverExerKind instance);
    partial void InsertCleverMathKind(CleverMathKind instance);
    partial void UpdateCleverMathKind(CleverMathKind instance);
    partial void DeleteCleverMathKind(CleverMathKind instance);
    partial void InsertCleverRange(CleverRange instance);
    partial void UpdateCleverRange(CleverRange instance);
    partial void DeleteCleverRange(CleverRange instance);
    partial void InsertClassList(ClassList instance);
    partial void UpdateClassList(ClassList instance);
    partial void DeleteClassList(ClassList instance);
    partial void InsertMotPhepToan(MotPhepToan instance);
    partial void UpdateMotPhepToan(MotPhepToan instance);
    partial void DeleteMotPhepToan(MotPhepToan instance);
    partial void InsertPhepToanBaSoHang(PhepToanBaSoHang instance);
    partial void UpdatePhepToanBaSoHang(PhepToanBaSoHang instance);
    partial void DeletePhepToanBaSoHang(PhepToanBaSoHang instance);
    partial void InsertDanhSachTen(DanhSachTen instance);
    partial void UpdateDanhSachTen(DanhSachTen instance);
    partial void DeleteDanhSachTen(DanhSachTen instance);
    partial void InsertDoiTuongHonKemNhau(DoiTuongHonKemNhau instance);
    partial void UpdateDoiTuongHonKemNhau(DoiTuongHonKemNhau instance);
    partial void DeleteDoiTuongHonKemNhau(DoiTuongHonKemNhau instance);
    partial void InsertDanhSachDoiTuong(DanhSachDoiTuong instance);
    partial void UpdateDanhSachDoiTuong(DanhSachDoiTuong instance);
    partial void DeleteDanhSachDoiTuong(DanhSachDoiTuong instance);
    partial void InsertBaiToanThoiGian(BaiToanThoiGian instance);
    partial void UpdateBaiToanThoiGian(BaiToanThoiGian instance);
    partial void DeleteBaiToanThoiGian(BaiToanThoiGian instance);
    partial void InsertBaiToanGhepO(BaiToanGhepO instance);
    partial void UpdateBaiToanGhepO(BaiToanGhepO instance);
    partial void DeleteBaiToanGhepO(BaiToanGhepO instance);
    partial void InsertBaiToanTimSo(BaiToanTimSo instance);
    partial void UpdateBaiToanTimSo(BaiToanTimSo instance);
    partial void DeleteBaiToanTimSo(BaiToanTimSo instance);
    partial void InsertBaiToanDemHinh(BaiToanDemHinh instance);
    partial void UpdateBaiToanDemHinh(BaiToanDemHinh instance);
    partial void DeleteBaiToanDemHinh(BaiToanDemHinh instance);
    partial void InsertBaiToanDaySo(BaiToanDaySo instance);
    partial void UpdateBaiToanDaySo(BaiToanDaySo instance);
    partial void DeleteBaiToanDaySo(BaiToanDaySo instance);
    #endregion
		
		public ToanThongMinhDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ToanThongMinhConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ToanThongMinhDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ToanThongMinhDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ToanThongMinhDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ToanThongMinhDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<UserProperty> UserProperties
		{
			get
			{
				return this.GetTable<UserProperty>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<HuyenThanhThi> HuyenThanhThis
		{
			get
			{
				return this.GetTable<HuyenThanhThi>();
			}
		}
		
		public System.Data.Linq.Table<NewsCategory> NewsCategories
		{
			get
			{
				return this.GetTable<NewsCategory>();
			}
		}
		
		public System.Data.Linq.Table<SchoolList> SchoolLists
		{
			get
			{
				return this.GetTable<SchoolList>();
			}
		}
		
		public System.Data.Linq.Table<TinhThanhPho> TinhThanhPhos
		{
			get
			{
				return this.GetTable<TinhThanhPho>();
			}
		}
		
		public System.Data.Linq.Table<NewsContent> NewsContents
		{
			get
			{
				return this.GetTable<NewsContent>();
			}
		}
		
		public System.Data.Linq.Table<MathKindList> MathKindLists
		{
			get
			{
				return this.GetTable<MathKindList>();
			}
		}
		
		public System.Data.Linq.Table<ExerKind> ExerKinds
		{
			get
			{
				return this.GetTable<ExerKind>();
			}
		}
		
		public System.Data.Linq.Table<CleverExerKind> CleverExerKinds
		{
			get
			{
				return this.GetTable<CleverExerKind>();
			}
		}
		
		public System.Data.Linq.Table<CleverMathKind> CleverMathKinds
		{
			get
			{
				return this.GetTable<CleverMathKind>();
			}
		}
		
		public System.Data.Linq.Table<CleverRange> CleverRanges
		{
			get
			{
				return this.GetTable<CleverRange>();
			}
		}
		
		public System.Data.Linq.Table<ClassList> ClassLists
		{
			get
			{
				return this.GetTable<ClassList>();
			}
		}
		
		public System.Data.Linq.Table<MotPhepToan> MotPhepToans
		{
			get
			{
				return this.GetTable<MotPhepToan>();
			}
		}
		
		public System.Data.Linq.Table<PhepToanBaSoHang> PhepToanBaSoHangs
		{
			get
			{
				return this.GetTable<PhepToanBaSoHang>();
			}
		}
		
		public System.Data.Linq.Table<DanhSachTen> DanhSachTens
		{
			get
			{
				return this.GetTable<DanhSachTen>();
			}
		}
		
		public System.Data.Linq.Table<DoiTuongHonKemNhau> DoiTuongHonKemNhaus
		{
			get
			{
				return this.GetTable<DoiTuongHonKemNhau>();
			}
		}
		
		public System.Data.Linq.Table<DanhSachDoiTuong> DanhSachDoiTuongs
		{
			get
			{
				return this.GetTable<DanhSachDoiTuong>();
			}
		}
		
		public System.Data.Linq.Table<BaiToanThoiGian> BaiToanThoiGians
		{
			get
			{
				return this.GetTable<BaiToanThoiGian>();
			}
		}
		
		public System.Data.Linq.Table<BaiToanGhepO> BaiToanGhepOs
		{
			get
			{
				return this.GetTable<BaiToanGhepO>();
			}
		}
		
		public System.Data.Linq.Table<BaiToanTimSo> BaiToanTimSos
		{
			get
			{
				return this.GetTable<BaiToanTimSo>();
			}
		}
		
		public System.Data.Linq.Table<BaiToanDemHinh> BaiToanDemHinhs
		{
			get
			{
				return this.GetTable<BaiToanDemHinh>();
			}
		}
		
		public System.Data.Linq.Table<BaiToanDaySo> BaiToanDaySos
		{
			get
			{
				return this.GetTable<BaiToanDaySo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProperty")]
	public partial class UserProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserFullName;
		
		private string _MaTinh;
		
		private string _MaHuyen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<int> _LoginNumber;
		
		private System.Nullable<System.DateTime> _ExpiredDate;
		
		private System.Nullable<int> _Prevent;
		
		private string _SchoolId;
		
		private string _UserName;
		
		private string _PhoneNumber;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserFullNameChanging(string value);
    partial void OnUserFullNameChanged();
    partial void OnMaTinhChanging(string value);
    partial void OnMaTinhChanged();
    partial void OnMaHuyenChanging(string value);
    partial void OnMaHuyenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnLoginNumberChanging(System.Nullable<int> value);
    partial void OnLoginNumberChanged();
    partial void OnExpiredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiredDateChanged();
    partial void OnPreventChanging(System.Nullable<int> value);
    partial void OnPreventChanged();
    partial void OnSchoolIdChanging(string value);
    partial void OnSchoolIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    #endregion
		
		public UserProperty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserFullName", DbType="NVarChar(250)")]
		public string UserFullName
		{
			get
			{
				return this._UserFullName;
			}
			set
			{
				if ((this._UserFullName != value))
				{
					this.OnUserFullNameChanging(value);
					this.SendPropertyChanging();
					this._UserFullName = value;
					this.SendPropertyChanged("UserFullName");
					this.OnUserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinh", DbType="NVarChar(50)")]
		public string MaTinh
		{
			get
			{
				return this._MaTinh;
			}
			set
			{
				if ((this._MaTinh != value))
				{
					this.OnMaTinhChanging(value);
					this.SendPropertyChanging();
					this._MaTinh = value;
					this.SendPropertyChanged("MaTinh");
					this.OnMaTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHuyen", DbType="NVarChar(50)")]
		public string MaHuyen
		{
			get
			{
				return this._MaHuyen;
			}
			set
			{
				if ((this._MaHuyen != value))
				{
					this.OnMaHuyenChanging(value);
					this.SendPropertyChanging();
					this._MaHuyen = value;
					this.SendPropertyChanged("MaHuyen");
					this.OnMaHuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginNumber", DbType="Int")]
		public System.Nullable<int> LoginNumber
		{
			get
			{
				return this._LoginNumber;
			}
			set
			{
				if ((this._LoginNumber != value))
				{
					this.OnLoginNumberChanging(value);
					this.SendPropertyChanging();
					this._LoginNumber = value;
					this.SendPropertyChanged("LoginNumber");
					this.OnLoginNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this.OnExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiredDate = value;
					this.SendPropertyChanged("ExpiredDate");
					this.OnExpiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prevent", DbType="Int")]
		public System.Nullable<int> Prevent
		{
			get
			{
				return this._Prevent;
			}
			set
			{
				if ((this._Prevent != value))
				{
					this.OnPreventChanging(value);
					this.SendPropertyChanging();
					this._Prevent = value;
					this.SendPropertyChanged("Prevent");
					this.OnPreventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="NVarChar(50)")]
		public string SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HuyenThanhThi")]
	public partial class HuyenThanhThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHuyenThi;
		
		private string _TenHuyenThi;
		
		private string _MaTinhTP;
		
		private System.Nullable<int> _ThuTuSapXep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHuyenThiChanging(string value);
    partial void OnMaHuyenThiChanged();
    partial void OnTenHuyenThiChanging(string value);
    partial void OnTenHuyenThiChanged();
    partial void OnMaTinhTPChanging(string value);
    partial void OnMaTinhTPChanged();
    partial void OnThuTuSapXepChanging(System.Nullable<int> value);
    partial void OnThuTuSapXepChanged();
    #endregion
		
		public HuyenThanhThi()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHuyenThi", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHuyenThi
		{
			get
			{
				return this._MaHuyenThi;
			}
			set
			{
				if ((this._MaHuyenThi != value))
				{
					this.OnMaHuyenThiChanging(value);
					this.SendPropertyChanging();
					this._MaHuyenThi = value;
					this.SendPropertyChanged("MaHuyenThi");
					this.OnMaHuyenThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHuyenThi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenHuyenThi
		{
			get
			{
				return this._TenHuyenThi;
			}
			set
			{
				if ((this._TenHuyenThi != value))
				{
					this.OnTenHuyenThiChanging(value);
					this.SendPropertyChanging();
					this._TenHuyenThi = value;
					this.SendPropertyChanged("TenHuyenThi");
					this.OnTenHuyenThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhTP", DbType="NVarChar(50)")]
		public string MaTinhTP
		{
			get
			{
				return this._MaTinhTP;
			}
			set
			{
				if ((this._MaTinhTP != value))
				{
					this.OnMaTinhTPChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTP = value;
					this.SendPropertyChanged("MaTinhTP");
					this.OnMaTinhTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTuSapXep", DbType="Int")]
		public System.Nullable<int> ThuTuSapXep
		{
			get
			{
				return this._ThuTuSapXep;
			}
			set
			{
				if ((this._ThuTuSapXep != value))
				{
					this.OnThuTuSapXepChanging(value);
					this.SendPropertyChanging();
					this._ThuTuSapXep = value;
					this.SendPropertyChanged("ThuTuSapXep");
					this.OnThuTuSapXepChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsCategory")]
	public partial class NewsCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NewsCategoryId;
		
		private string _NewsCategoryTitle;
		
		private System.Nullable<int> _NewsCategoryOrder;
		
		private EntitySet<NewsContent> _NewsContents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsCategoryIdChanging(string value);
    partial void OnNewsCategoryIdChanged();
    partial void OnNewsCategoryTitleChanging(string value);
    partial void OnNewsCategoryTitleChanged();
    partial void OnNewsCategoryOrderChanging(System.Nullable<int> value);
    partial void OnNewsCategoryOrderChanged();
    #endregion
		
		public NewsCategory()
		{
			this._NewsContents = new EntitySet<NewsContent>(new Action<NewsContent>(this.attach_NewsContents), new Action<NewsContent>(this.detach_NewsContents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsCategoryId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NewsCategoryId
		{
			get
			{
				return this._NewsCategoryId;
			}
			set
			{
				if ((this._NewsCategoryId != value))
				{
					this.OnNewsCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._NewsCategoryId = value;
					this.SendPropertyChanged("NewsCategoryId");
					this.OnNewsCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsCategoryTitle", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NewsCategoryTitle
		{
			get
			{
				return this._NewsCategoryTitle;
			}
			set
			{
				if ((this._NewsCategoryTitle != value))
				{
					this.OnNewsCategoryTitleChanging(value);
					this.SendPropertyChanging();
					this._NewsCategoryTitle = value;
					this.SendPropertyChanged("NewsCategoryTitle");
					this.OnNewsCategoryTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsCategoryOrder", DbType="Int")]
		public System.Nullable<int> NewsCategoryOrder
		{
			get
			{
				return this._NewsCategoryOrder;
			}
			set
			{
				if ((this._NewsCategoryOrder != value))
				{
					this.OnNewsCategoryOrderChanging(value);
					this.SendPropertyChanging();
					this._NewsCategoryOrder = value;
					this.SendPropertyChanged("NewsCategoryOrder");
					this.OnNewsCategoryOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NewsCategory_NewsContent", Storage="_NewsContents", ThisKey="NewsCategoryId", OtherKey="NewsCatId")]
		public EntitySet<NewsContent> NewsContents
		{
			get
			{
				return this._NewsContents;
			}
			set
			{
				this._NewsContents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NewsContents(NewsContent entity)
		{
			this.SendPropertyChanging();
			entity.NewsCategory = this;
		}
		
		private void detach_NewsContents(NewsContent entity)
		{
			this.SendPropertyChanging();
			entity.NewsCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolList")]
	public partial class SchoolList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _SchoolOrder;
		
		private string _SchoolId;
		
		private string _SchoolName;
		
		private string _DistrictId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSchoolOrderChanging(System.Nullable<int> value);
    partial void OnSchoolOrderChanged();
    partial void OnSchoolIdChanging(string value);
    partial void OnSchoolIdChanged();
    partial void OnSchoolNameChanging(string value);
    partial void OnSchoolNameChanged();
    partial void OnDistrictIdChanging(string value);
    partial void OnDistrictIdChanged();
    #endregion
		
		public SchoolList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolOrder", DbType="Int")]
		public System.Nullable<int> SchoolOrder
		{
			get
			{
				return this._SchoolOrder;
			}
			set
			{
				if ((this._SchoolOrder != value))
				{
					this.OnSchoolOrderChanging(value);
					this.SendPropertyChanging();
					this._SchoolOrder = value;
					this.SendPropertyChanged("SchoolOrder");
					this.OnSchoolOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SchoolId
		{
			get
			{
				return this._SchoolId;
			}
			set
			{
				if ((this._SchoolId != value))
				{
					this.OnSchoolIdChanging(value);
					this.SendPropertyChanging();
					this._SchoolId = value;
					this.SendPropertyChanged("SchoolId");
					this.OnSchoolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolName", DbType="NVarChar(255)")]
		public string SchoolName
		{
			get
			{
				return this._SchoolName;
			}
			set
			{
				if ((this._SchoolName != value))
				{
					this.OnSchoolNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolName = value;
					this.SendPropertyChanged("SchoolName");
					this.OnSchoolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="NVarChar(50)")]
		public string DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinhThanhPho")]
	public partial class TinhThanhPho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTinhTP;
		
		private string _TenTinhTP;
		
		private System.Nullable<int> _ThuTuSapXep;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTinhTPChanging(string value);
    partial void OnMaTinhTPChanged();
    partial void OnTenTinhTPChanging(string value);
    partial void OnTenTinhTPChanged();
    partial void OnThuTuSapXepChanging(System.Nullable<int> value);
    partial void OnThuTuSapXepChanged();
    #endregion
		
		public TinhThanhPho()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTinhTP", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTinhTP
		{
			get
			{
				return this._MaTinhTP;
			}
			set
			{
				if ((this._MaTinhTP != value))
				{
					this.OnMaTinhTPChanging(value);
					this.SendPropertyChanging();
					this._MaTinhTP = value;
					this.SendPropertyChanged("MaTinhTP");
					this.OnMaTinhTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinhTP", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenTinhTP
		{
			get
			{
				return this._TenTinhTP;
			}
			set
			{
				if ((this._TenTinhTP != value))
				{
					this.OnTenTinhTPChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTP = value;
					this.SendPropertyChanged("TenTinhTP");
					this.OnTenTinhTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTuSapXep", DbType="Int")]
		public System.Nullable<int> ThuTuSapXep
		{
			get
			{
				return this._ThuTuSapXep;
			}
			set
			{
				if ((this._ThuTuSapXep != value))
				{
					this.OnThuTuSapXepChanging(value);
					this.SendPropertyChanging();
					this._ThuTuSapXep = value;
					this.SendPropertyChanged("ThuTuSapXep");
					this.OnThuTuSapXepChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsContent")]
	public partial class NewsContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NewsId;
		
		private string _NewsCatId;
		
		private string _NewsAuthor;
		
		private string _NewsNarration;
		
		private string _NewsTitle;
		
		private string _NewsContents;
		
		private string _NewsImage;
		
		private System.Nullable<int> _NewsOrder;
		
		private EntityRef<NewsCategory> _NewsCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIdChanging(string value);
    partial void OnNewsIdChanged();
    partial void OnNewsCatIdChanging(string value);
    partial void OnNewsCatIdChanged();
    partial void OnNewsAuthorChanging(string value);
    partial void OnNewsAuthorChanged();
    partial void OnNewsNarrationChanging(string value);
    partial void OnNewsNarrationChanged();
    partial void OnNewsTitleChanging(string value);
    partial void OnNewsTitleChanged();
    partial void OnNewsContentsChanging(string value);
    partial void OnNewsContentsChanged();
    partial void OnNewsImageChanging(string value);
    partial void OnNewsImageChanged();
    partial void OnNewsOrderChanging(System.Nullable<int> value);
    partial void OnNewsOrderChanged();
    #endregion
		
		public NewsContent()
		{
			this._NewsCategory = default(EntityRef<NewsCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NewsId
		{
			get
			{
				return this._NewsId;
			}
			set
			{
				if ((this._NewsId != value))
				{
					this.OnNewsIdChanging(value);
					this.SendPropertyChanging();
					this._NewsId = value;
					this.SendPropertyChanged("NewsId");
					this.OnNewsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsCatId", DbType="NVarChar(50)")]
		public string NewsCatId
		{
			get
			{
				return this._NewsCatId;
			}
			set
			{
				if ((this._NewsCatId != value))
				{
					if (this._NewsCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewsCatIdChanging(value);
					this.SendPropertyChanging();
					this._NewsCatId = value;
					this.SendPropertyChanged("NewsCatId");
					this.OnNewsCatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsAuthor", DbType="NVarChar(250)")]
		public string NewsAuthor
		{
			get
			{
				return this._NewsAuthor;
			}
			set
			{
				if ((this._NewsAuthor != value))
				{
					this.OnNewsAuthorChanging(value);
					this.SendPropertyChanging();
					this._NewsAuthor = value;
					this.SendPropertyChanged("NewsAuthor");
					this.OnNewsAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsNarration", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NewsNarration
		{
			get
			{
				return this._NewsNarration;
			}
			set
			{
				if ((this._NewsNarration != value))
				{
					this.OnNewsNarrationChanging(value);
					this.SendPropertyChanging();
					this._NewsNarration = value;
					this.SendPropertyChanged("NewsNarration");
					this.OnNewsNarrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTitle", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NewsTitle
		{
			get
			{
				return this._NewsTitle;
			}
			set
			{
				if ((this._NewsTitle != value))
				{
					this.OnNewsTitleChanging(value);
					this.SendPropertyChanging();
					this._NewsTitle = value;
					this.SendPropertyChanged("NewsTitle");
					this.OnNewsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsContents", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NewsContents
		{
			get
			{
				return this._NewsContents;
			}
			set
			{
				if ((this._NewsContents != value))
				{
					this.OnNewsContentsChanging(value);
					this.SendPropertyChanging();
					this._NewsContents = value;
					this.SendPropertyChanged("NewsContents");
					this.OnNewsContentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsImage", DbType="NVarChar(250)")]
		public string NewsImage
		{
			get
			{
				return this._NewsImage;
			}
			set
			{
				if ((this._NewsImage != value))
				{
					this.OnNewsImageChanging(value);
					this.SendPropertyChanging();
					this._NewsImage = value;
					this.SendPropertyChanged("NewsImage");
					this.OnNewsImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsOrder", DbType="Int")]
		public System.Nullable<int> NewsOrder
		{
			get
			{
				return this._NewsOrder;
			}
			set
			{
				if ((this._NewsOrder != value))
				{
					this.OnNewsOrderChanging(value);
					this.SendPropertyChanging();
					this._NewsOrder = value;
					this.SendPropertyChanged("NewsOrder");
					this.OnNewsOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NewsCategory_NewsContent", Storage="_NewsCategory", ThisKey="NewsCatId", OtherKey="NewsCategoryId", IsForeignKey=true)]
		public NewsCategory NewsCategory
		{
			get
			{
				return this._NewsCategory.Entity;
			}
			set
			{
				NewsCategory previousValue = this._NewsCategory.Entity;
				if (((previousValue != value) 
							|| (this._NewsCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NewsCategory.Entity = null;
						previousValue.NewsContents.Remove(this);
					}
					this._NewsCategory.Entity = value;
					if ((value != null))
					{
						value.NewsContents.Add(this);
						this._NewsCatId = value.NewsCategoryId;
					}
					else
					{
						this._NewsCatId = default(string);
					}
					this.SendPropertyChanged("NewsCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MathKindList")]
	public partial class MathKindList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MathKindListId;
		
		private string _MathKindListName;
		
		private string _MathKindListInfor;
		
		private System.Nullable<int> _MathKindListOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMathKindListIdChanging(string value);
    partial void OnMathKindListIdChanged();
    partial void OnMathKindListNameChanging(string value);
    partial void OnMathKindListNameChanged();
    partial void OnMathKindListInforChanging(string value);
    partial void OnMathKindListInforChanged();
    partial void OnMathKindListOrderChanging(System.Nullable<int> value);
    partial void OnMathKindListOrderChanged();
    #endregion
		
		public MathKindList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MathKindListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MathKindListId
		{
			get
			{
				return this._MathKindListId;
			}
			set
			{
				if ((this._MathKindListId != value))
				{
					this.OnMathKindListIdChanging(value);
					this.SendPropertyChanging();
					this._MathKindListId = value;
					this.SendPropertyChanged("MathKindListId");
					this.OnMathKindListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MathKindListName", DbType="NVarChar(250)")]
		public string MathKindListName
		{
			get
			{
				return this._MathKindListName;
			}
			set
			{
				if ((this._MathKindListName != value))
				{
					this.OnMathKindListNameChanging(value);
					this.SendPropertyChanging();
					this._MathKindListName = value;
					this.SendPropertyChanged("MathKindListName");
					this.OnMathKindListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MathKindListInfor", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string MathKindListInfor
		{
			get
			{
				return this._MathKindListInfor;
			}
			set
			{
				if ((this._MathKindListInfor != value))
				{
					this.OnMathKindListInforChanging(value);
					this.SendPropertyChanging();
					this._MathKindListInfor = value;
					this.SendPropertyChanged("MathKindListInfor");
					this.OnMathKindListInforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MathKindListOrder", DbType="Int")]
		public System.Nullable<int> MathKindListOrder
		{
			get
			{
				return this._MathKindListOrder;
			}
			set
			{
				if ((this._MathKindListOrder != value))
				{
					this.OnMathKindListOrderChanging(value);
					this.SendPropertyChanging();
					this._MathKindListOrder = value;
					this.SendPropertyChanged("MathKindListOrder");
					this.OnMathKindListOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExerKind")]
	public partial class ExerKind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ExerKindId;
		
		private string _ExerKindName;
		
		private string _ExerKindInfor;
		
		private System.Nullable<int> _ExerKindOrder;
		
		private string _TimeListId;
		
		private string _MathKindListId;
		
		private string _ClassListId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExerKindIdChanging(string value);
    partial void OnExerKindIdChanged();
    partial void OnExerKindNameChanging(string value);
    partial void OnExerKindNameChanged();
    partial void OnExerKindInforChanging(string value);
    partial void OnExerKindInforChanged();
    partial void OnExerKindOrderChanging(System.Nullable<int> value);
    partial void OnExerKindOrderChanged();
    partial void OnTimeListIdChanging(string value);
    partial void OnTimeListIdChanged();
    partial void OnMathKindListIdChanging(string value);
    partial void OnMathKindListIdChanged();
    partial void OnClassListIdChanging(string value);
    partial void OnClassListIdChanged();
    #endregion
		
		public ExerKind()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerKindId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ExerKindId
		{
			get
			{
				return this._ExerKindId;
			}
			set
			{
				if ((this._ExerKindId != value))
				{
					this.OnExerKindIdChanging(value);
					this.SendPropertyChanging();
					this._ExerKindId = value;
					this.SendPropertyChanged("ExerKindId");
					this.OnExerKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerKindName", DbType="NVarChar(250)")]
		public string ExerKindName
		{
			get
			{
				return this._ExerKindName;
			}
			set
			{
				if ((this._ExerKindName != value))
				{
					this.OnExerKindNameChanging(value);
					this.SendPropertyChanging();
					this._ExerKindName = value;
					this.SendPropertyChanged("ExerKindName");
					this.OnExerKindNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerKindInfor", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ExerKindInfor
		{
			get
			{
				return this._ExerKindInfor;
			}
			set
			{
				if ((this._ExerKindInfor != value))
				{
					this.OnExerKindInforChanging(value);
					this.SendPropertyChanging();
					this._ExerKindInfor = value;
					this.SendPropertyChanged("ExerKindInfor");
					this.OnExerKindInforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExerKindOrder", DbType="Int")]
		public System.Nullable<int> ExerKindOrder
		{
			get
			{
				return this._ExerKindOrder;
			}
			set
			{
				if ((this._ExerKindOrder != value))
				{
					this.OnExerKindOrderChanging(value);
					this.SendPropertyChanging();
					this._ExerKindOrder = value;
					this.SendPropertyChanged("ExerKindOrder");
					this.OnExerKindOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TimeListId
		{
			get
			{
				return this._TimeListId;
			}
			set
			{
				if ((this._TimeListId != value))
				{
					this.OnTimeListIdChanging(value);
					this.SendPropertyChanging();
					this._TimeListId = value;
					this.SendPropertyChanged("TimeListId");
					this.OnTimeListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MathKindListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MathKindListId
		{
			get
			{
				return this._MathKindListId;
			}
			set
			{
				if ((this._MathKindListId != value))
				{
					this.OnMathKindListIdChanging(value);
					this.SendPropertyChanging();
					this._MathKindListId = value;
					this.SendPropertyChanged("MathKindListId");
					this.OnMathKindListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ClassListId
		{
			get
			{
				return this._ClassListId;
			}
			set
			{
				if ((this._ClassListId != value))
				{
					this.OnClassListIdChanging(value);
					this.SendPropertyChanging();
					this._ClassListId = value;
					this.SendPropertyChanged("ClassListId");
					this.OnClassListIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CleverExerKind")]
	public partial class CleverExerKind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CleverExerKindId;
		
		private string _CleverExerKindName;
		
		private string _CleverExerKindInfor;
		
		private System.Nullable<int> _CleverExerKindOrder;
		
		private string _CleverMathKindId;
		
		private EntitySet<CleverRange> _CleverRanges;
		
		private EntityRef<CleverMathKind> _CleverMathKind;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCleverExerKindIdChanging(string value);
    partial void OnCleverExerKindIdChanged();
    partial void OnCleverExerKindNameChanging(string value);
    partial void OnCleverExerKindNameChanged();
    partial void OnCleverExerKindInforChanging(string value);
    partial void OnCleverExerKindInforChanged();
    partial void OnCleverExerKindOrderChanging(System.Nullable<int> value);
    partial void OnCleverExerKindOrderChanged();
    partial void OnCleverMathKindIdChanging(string value);
    partial void OnCleverMathKindIdChanged();
    #endregion
		
		public CleverExerKind()
		{
			this._CleverRanges = new EntitySet<CleverRange>(new Action<CleverRange>(this.attach_CleverRanges), new Action<CleverRange>(this.detach_CleverRanges));
			this._CleverMathKind = default(EntityRef<CleverMathKind>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverExerKindId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CleverExerKindId
		{
			get
			{
				return this._CleverExerKindId;
			}
			set
			{
				if ((this._CleverExerKindId != value))
				{
					this.OnCleverExerKindIdChanging(value);
					this.SendPropertyChanging();
					this._CleverExerKindId = value;
					this.SendPropertyChanged("CleverExerKindId");
					this.OnCleverExerKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverExerKindName", DbType="NVarChar(250)")]
		public string CleverExerKindName
		{
			get
			{
				return this._CleverExerKindName;
			}
			set
			{
				if ((this._CleverExerKindName != value))
				{
					this.OnCleverExerKindNameChanging(value);
					this.SendPropertyChanging();
					this._CleverExerKindName = value;
					this.SendPropertyChanged("CleverExerKindName");
					this.OnCleverExerKindNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverExerKindInfor", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CleverExerKindInfor
		{
			get
			{
				return this._CleverExerKindInfor;
			}
			set
			{
				if ((this._CleverExerKindInfor != value))
				{
					this.OnCleverExerKindInforChanging(value);
					this.SendPropertyChanging();
					this._CleverExerKindInfor = value;
					this.SendPropertyChanged("CleverExerKindInfor");
					this.OnCleverExerKindInforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverExerKindOrder", DbType="Int")]
		public System.Nullable<int> CleverExerKindOrder
		{
			get
			{
				return this._CleverExerKindOrder;
			}
			set
			{
				if ((this._CleverExerKindOrder != value))
				{
					this.OnCleverExerKindOrderChanging(value);
					this.SendPropertyChanging();
					this._CleverExerKindOrder = value;
					this.SendPropertyChanged("CleverExerKindOrder");
					this.OnCleverExerKindOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverMathKindId", DbType="NVarChar(50)")]
		public string CleverMathKindId
		{
			get
			{
				return this._CleverMathKindId;
			}
			set
			{
				if ((this._CleverMathKindId != value))
				{
					if (this._CleverMathKind.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCleverMathKindIdChanging(value);
					this.SendPropertyChanging();
					this._CleverMathKindId = value;
					this.SendPropertyChanged("CleverMathKindId");
					this.OnCleverMathKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CleverExerKind_CleverRange", Storage="_CleverRanges", ThisKey="CleverExerKindId", OtherKey="CleverExerKindId")]
		public EntitySet<CleverRange> CleverRanges
		{
			get
			{
				return this._CleverRanges;
			}
			set
			{
				this._CleverRanges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CleverMathKind_CleverExerKind", Storage="_CleverMathKind", ThisKey="CleverMathKindId", OtherKey="CleverMathKindId", IsForeignKey=true)]
		public CleverMathKind CleverMathKind
		{
			get
			{
				return this._CleverMathKind.Entity;
			}
			set
			{
				CleverMathKind previousValue = this._CleverMathKind.Entity;
				if (((previousValue != value) 
							|| (this._CleverMathKind.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CleverMathKind.Entity = null;
						previousValue.CleverExerKinds.Remove(this);
					}
					this._CleverMathKind.Entity = value;
					if ((value != null))
					{
						value.CleverExerKinds.Add(this);
						this._CleverMathKindId = value.CleverMathKindId;
					}
					else
					{
						this._CleverMathKindId = default(string);
					}
					this.SendPropertyChanged("CleverMathKind");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CleverRanges(CleverRange entity)
		{
			this.SendPropertyChanging();
			entity.CleverExerKind = this;
		}
		
		private void detach_CleverRanges(CleverRange entity)
		{
			this.SendPropertyChanging();
			entity.CleverExerKind = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CleverMathKind")]
	public partial class CleverMathKind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CleverMathKindId;
		
		private string _CleverMathKindName;
		
		private string _CleverMathKindInfor;
		
		private string _ClassListId;
		
		private System.Nullable<int> _CleverMathKindOrder;
		
		private EntitySet<CleverExerKind> _CleverExerKinds;
		
		private EntityRef<ClassList> _ClassList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCleverMathKindIdChanging(string value);
    partial void OnCleverMathKindIdChanged();
    partial void OnCleverMathKindNameChanging(string value);
    partial void OnCleverMathKindNameChanged();
    partial void OnCleverMathKindInforChanging(string value);
    partial void OnCleverMathKindInforChanged();
    partial void OnClassListIdChanging(string value);
    partial void OnClassListIdChanged();
    partial void OnCleverMathKindOrderChanging(System.Nullable<int> value);
    partial void OnCleverMathKindOrderChanged();
    #endregion
		
		public CleverMathKind()
		{
			this._CleverExerKinds = new EntitySet<CleverExerKind>(new Action<CleverExerKind>(this.attach_CleverExerKinds), new Action<CleverExerKind>(this.detach_CleverExerKinds));
			this._ClassList = default(EntityRef<ClassList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverMathKindId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CleverMathKindId
		{
			get
			{
				return this._CleverMathKindId;
			}
			set
			{
				if ((this._CleverMathKindId != value))
				{
					this.OnCleverMathKindIdChanging(value);
					this.SendPropertyChanging();
					this._CleverMathKindId = value;
					this.SendPropertyChanged("CleverMathKindId");
					this.OnCleverMathKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverMathKindName", DbType="NVarChar(250)")]
		public string CleverMathKindName
		{
			get
			{
				return this._CleverMathKindName;
			}
			set
			{
				if ((this._CleverMathKindName != value))
				{
					this.OnCleverMathKindNameChanging(value);
					this.SendPropertyChanging();
					this._CleverMathKindName = value;
					this.SendPropertyChanged("CleverMathKindName");
					this.OnCleverMathKindNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverMathKindInfor", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CleverMathKindInfor
		{
			get
			{
				return this._CleverMathKindInfor;
			}
			set
			{
				if ((this._CleverMathKindInfor != value))
				{
					this.OnCleverMathKindInforChanging(value);
					this.SendPropertyChanging();
					this._CleverMathKindInfor = value;
					this.SendPropertyChanged("CleverMathKindInfor");
					this.OnCleverMathKindInforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassListId", DbType="NVarChar(50)")]
		public string ClassListId
		{
			get
			{
				return this._ClassListId;
			}
			set
			{
				if ((this._ClassListId != value))
				{
					if (this._ClassList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassListIdChanging(value);
					this.SendPropertyChanging();
					this._ClassListId = value;
					this.SendPropertyChanged("ClassListId");
					this.OnClassListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverMathKindOrder", DbType="Int")]
		public System.Nullable<int> CleverMathKindOrder
		{
			get
			{
				return this._CleverMathKindOrder;
			}
			set
			{
				if ((this._CleverMathKindOrder != value))
				{
					this.OnCleverMathKindOrderChanging(value);
					this.SendPropertyChanging();
					this._CleverMathKindOrder = value;
					this.SendPropertyChanged("CleverMathKindOrder");
					this.OnCleverMathKindOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CleverMathKind_CleverExerKind", Storage="_CleverExerKinds", ThisKey="CleverMathKindId", OtherKey="CleverMathKindId")]
		public EntitySet<CleverExerKind> CleverExerKinds
		{
			get
			{
				return this._CleverExerKinds;
			}
			set
			{
				this._CleverExerKinds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_CleverMathKind", Storage="_ClassList", ThisKey="ClassListId", OtherKey="ClassListId", IsForeignKey=true)]
		public ClassList ClassList
		{
			get
			{
				return this._ClassList.Entity;
			}
			set
			{
				ClassList previousValue = this._ClassList.Entity;
				if (((previousValue != value) 
							|| (this._ClassList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassList.Entity = null;
						previousValue.CleverMathKinds.Remove(this);
					}
					this._ClassList.Entity = value;
					if ((value != null))
					{
						value.CleverMathKinds.Add(this);
						this._ClassListId = value.ClassListId;
					}
					else
					{
						this._ClassListId = default(string);
					}
					this.SendPropertyChanged("ClassList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CleverExerKinds(CleverExerKind entity)
		{
			this.SendPropertyChanging();
			entity.CleverMathKind = this;
		}
		
		private void detach_CleverExerKinds(CleverExerKind entity)
		{
			this.SendPropertyChanging();
			entity.CleverMathKind = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CleverRange")]
	public partial class CleverRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CleverRangeId;
		
		private string _CleverRangeValue;
		
		private string _CleverAnswers;
		
		private string _CleverExerKindId;
		
		private System.Nullable<int> _CleverRangeOrder;
		
		private string _CleverRangeLever;
		
		private string _CleverRangeHelp;
		
		private EntityRef<CleverExerKind> _CleverExerKind;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCleverRangeIdChanging(string value);
    partial void OnCleverRangeIdChanged();
    partial void OnCleverRangeValueChanging(string value);
    partial void OnCleverRangeValueChanged();
    partial void OnCleverAnswersChanging(string value);
    partial void OnCleverAnswersChanged();
    partial void OnCleverExerKindIdChanging(string value);
    partial void OnCleverExerKindIdChanged();
    partial void OnCleverRangeOrderChanging(System.Nullable<int> value);
    partial void OnCleverRangeOrderChanged();
    partial void OnCleverRangeLeverChanging(string value);
    partial void OnCleverRangeLeverChanged();
    partial void OnCleverRangeHelpChanging(string value);
    partial void OnCleverRangeHelpChanged();
    #endregion
		
		public CleverRange()
		{
			this._CleverExerKind = default(EntityRef<CleverExerKind>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverRangeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CleverRangeId
		{
			get
			{
				return this._CleverRangeId;
			}
			set
			{
				if ((this._CleverRangeId != value))
				{
					this.OnCleverRangeIdChanging(value);
					this.SendPropertyChanging();
					this._CleverRangeId = value;
					this.SendPropertyChanged("CleverRangeId");
					this.OnCleverRangeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverRangeValue", DbType="NVarChar(250)")]
		public string CleverRangeValue
		{
			get
			{
				return this._CleverRangeValue;
			}
			set
			{
				if ((this._CleverRangeValue != value))
				{
					this.OnCleverRangeValueChanging(value);
					this.SendPropertyChanging();
					this._CleverRangeValue = value;
					this.SendPropertyChanged("CleverRangeValue");
					this.OnCleverRangeValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverAnswers", DbType="NVarChar(50)")]
		public string CleverAnswers
		{
			get
			{
				return this._CleverAnswers;
			}
			set
			{
				if ((this._CleverAnswers != value))
				{
					this.OnCleverAnswersChanging(value);
					this.SendPropertyChanging();
					this._CleverAnswers = value;
					this.SendPropertyChanged("CleverAnswers");
					this.OnCleverAnswersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverExerKindId", DbType="NVarChar(50)")]
		public string CleverExerKindId
		{
			get
			{
				return this._CleverExerKindId;
			}
			set
			{
				if ((this._CleverExerKindId != value))
				{
					if (this._CleverExerKind.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCleverExerKindIdChanging(value);
					this.SendPropertyChanging();
					this._CleverExerKindId = value;
					this.SendPropertyChanged("CleverExerKindId");
					this.OnCleverExerKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverRangeOrder", DbType="Int")]
		public System.Nullable<int> CleverRangeOrder
		{
			get
			{
				return this._CleverRangeOrder;
			}
			set
			{
				if ((this._CleverRangeOrder != value))
				{
					this.OnCleverRangeOrderChanging(value);
					this.SendPropertyChanging();
					this._CleverRangeOrder = value;
					this.SendPropertyChanged("CleverRangeOrder");
					this.OnCleverRangeOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverRangeLever", DbType="NVarChar(50)")]
		public string CleverRangeLever
		{
			get
			{
				return this._CleverRangeLever;
			}
			set
			{
				if ((this._CleverRangeLever != value))
				{
					this.OnCleverRangeLeverChanging(value);
					this.SendPropertyChanging();
					this._CleverRangeLever = value;
					this.SendPropertyChanged("CleverRangeLever");
					this.OnCleverRangeLeverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleverRangeHelp", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CleverRangeHelp
		{
			get
			{
				return this._CleverRangeHelp;
			}
			set
			{
				if ((this._CleverRangeHelp != value))
				{
					this.OnCleverRangeHelpChanging(value);
					this.SendPropertyChanging();
					this._CleverRangeHelp = value;
					this.SendPropertyChanged("CleverRangeHelp");
					this.OnCleverRangeHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CleverExerKind_CleverRange", Storage="_CleverExerKind", ThisKey="CleverExerKindId", OtherKey="CleverExerKindId", IsForeignKey=true)]
		public CleverExerKind CleverExerKind
		{
			get
			{
				return this._CleverExerKind.Entity;
			}
			set
			{
				CleverExerKind previousValue = this._CleverExerKind.Entity;
				if (((previousValue != value) 
							|| (this._CleverExerKind.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CleverExerKind.Entity = null;
						previousValue.CleverRanges.Remove(this);
					}
					this._CleverExerKind.Entity = value;
					if ((value != null))
					{
						value.CleverRanges.Add(this);
						this._CleverExerKindId = value.CleverExerKindId;
					}
					else
					{
						this._CleverExerKindId = default(string);
					}
					this.SendPropertyChanged("CleverExerKind");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClassList")]
	public partial class ClassList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ClassListId;
		
		private string _ClassListName;
		
		private string _ClassListInfor;
		
		private System.Nullable<int> _ClassListOrder;
		
		private EntitySet<CleverMathKind> _CleverMathKinds;
		
		private EntitySet<MotPhepToan> _MotPhepToans;
		
		private EntitySet<PhepToanBaSoHang> _PhepToanBaSoHangs;
		
		private EntitySet<DoiTuongHonKemNhau> _DoiTuongHonKemNhaus;
		
		private EntitySet<BaiToanThoiGian> _BaiToanThoiGians;
		
		private EntitySet<BaiToanGhepO> _BaiToanGhepOs;
		
		private EntitySet<BaiToanTimSo> _BaiToanTimSos;
		
		private EntitySet<BaiToanDemHinh> _BaiToanDemHinhs;
		
		private EntitySet<BaiToanDaySo> _BaiToanDaySos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassListIdChanging(string value);
    partial void OnClassListIdChanged();
    partial void OnClassListNameChanging(string value);
    partial void OnClassListNameChanged();
    partial void OnClassListInforChanging(string value);
    partial void OnClassListInforChanged();
    partial void OnClassListOrderChanging(System.Nullable<int> value);
    partial void OnClassListOrderChanged();
    #endregion
		
		public ClassList()
		{
			this._CleverMathKinds = new EntitySet<CleverMathKind>(new Action<CleverMathKind>(this.attach_CleverMathKinds), new Action<CleverMathKind>(this.detach_CleverMathKinds));
			this._MotPhepToans = new EntitySet<MotPhepToan>(new Action<MotPhepToan>(this.attach_MotPhepToans), new Action<MotPhepToan>(this.detach_MotPhepToans));
			this._PhepToanBaSoHangs = new EntitySet<PhepToanBaSoHang>(new Action<PhepToanBaSoHang>(this.attach_PhepToanBaSoHangs), new Action<PhepToanBaSoHang>(this.detach_PhepToanBaSoHangs));
			this._DoiTuongHonKemNhaus = new EntitySet<DoiTuongHonKemNhau>(new Action<DoiTuongHonKemNhau>(this.attach_DoiTuongHonKemNhaus), new Action<DoiTuongHonKemNhau>(this.detach_DoiTuongHonKemNhaus));
			this._BaiToanThoiGians = new EntitySet<BaiToanThoiGian>(new Action<BaiToanThoiGian>(this.attach_BaiToanThoiGians), new Action<BaiToanThoiGian>(this.detach_BaiToanThoiGians));
			this._BaiToanGhepOs = new EntitySet<BaiToanGhepO>(new Action<BaiToanGhepO>(this.attach_BaiToanGhepOs), new Action<BaiToanGhepO>(this.detach_BaiToanGhepOs));
			this._BaiToanTimSos = new EntitySet<BaiToanTimSo>(new Action<BaiToanTimSo>(this.attach_BaiToanTimSos), new Action<BaiToanTimSo>(this.detach_BaiToanTimSos));
			this._BaiToanDemHinhs = new EntitySet<BaiToanDemHinh>(new Action<BaiToanDemHinh>(this.attach_BaiToanDemHinhs), new Action<BaiToanDemHinh>(this.detach_BaiToanDemHinhs));
			this._BaiToanDaySos = new EntitySet<BaiToanDaySo>(new Action<BaiToanDaySo>(this.attach_BaiToanDaySos), new Action<BaiToanDaySo>(this.detach_BaiToanDaySos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassListId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ClassListId
		{
			get
			{
				return this._ClassListId;
			}
			set
			{
				if ((this._ClassListId != value))
				{
					this.OnClassListIdChanging(value);
					this.SendPropertyChanging();
					this._ClassListId = value;
					this.SendPropertyChanged("ClassListId");
					this.OnClassListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassListName", DbType="NVarChar(250)")]
		public string ClassListName
		{
			get
			{
				return this._ClassListName;
			}
			set
			{
				if ((this._ClassListName != value))
				{
					this.OnClassListNameChanging(value);
					this.SendPropertyChanging();
					this._ClassListName = value;
					this.SendPropertyChanged("ClassListName");
					this.OnClassListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassListInfor", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ClassListInfor
		{
			get
			{
				return this._ClassListInfor;
			}
			set
			{
				if ((this._ClassListInfor != value))
				{
					this.OnClassListInforChanging(value);
					this.SendPropertyChanging();
					this._ClassListInfor = value;
					this.SendPropertyChanged("ClassListInfor");
					this.OnClassListInforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassListOrder", DbType="Int")]
		public System.Nullable<int> ClassListOrder
		{
			get
			{
				return this._ClassListOrder;
			}
			set
			{
				if ((this._ClassListOrder != value))
				{
					this.OnClassListOrderChanging(value);
					this.SendPropertyChanging();
					this._ClassListOrder = value;
					this.SendPropertyChanged("ClassListOrder");
					this.OnClassListOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_CleverMathKind", Storage="_CleverMathKinds", ThisKey="ClassListId", OtherKey="ClassListId")]
		public EntitySet<CleverMathKind> CleverMathKinds
		{
			get
			{
				return this._CleverMathKinds;
			}
			set
			{
				this._CleverMathKinds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_MotPhepToan", Storage="_MotPhepToans", ThisKey="ClassListId", OtherKey="ThuocKhoiLop")]
		public EntitySet<MotPhepToan> MotPhepToans
		{
			get
			{
				return this._MotPhepToans;
			}
			set
			{
				this._MotPhepToans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_PhepToanBaSoHang", Storage="_PhepToanBaSoHangs", ThisKey="ClassListId", OtherKey="ThuocKhoiLop")]
		public EntitySet<PhepToanBaSoHang> PhepToanBaSoHangs
		{
			get
			{
				return this._PhepToanBaSoHangs;
			}
			set
			{
				this._PhepToanBaSoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_DoiTuongHonKemNhau", Storage="_DoiTuongHonKemNhaus", ThisKey="ClassListId", OtherKey="ThuocKhoiLop")]
		public EntitySet<DoiTuongHonKemNhau> DoiTuongHonKemNhaus
		{
			get
			{
				return this._DoiTuongHonKemNhaus;
			}
			set
			{
				this._DoiTuongHonKemNhaus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_BaiToanThoiGian", Storage="_BaiToanThoiGians", ThisKey="ClassListId", OtherKey="ThuocKhoiLop")]
		public EntitySet<BaiToanThoiGian> BaiToanThoiGians
		{
			get
			{
				return this._BaiToanThoiGians;
			}
			set
			{
				this._BaiToanThoiGians.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_BaiToanGhepO", Storage="_BaiToanGhepOs", ThisKey="ClassListId", OtherKey="ThuocKhoiLop")]
		public EntitySet<BaiToanGhepO> BaiToanGhepOs
		{
			get
			{
				return this._BaiToanGhepOs;
			}
			set
			{
				this._BaiToanGhepOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_BaiToanTimSo", Storage="_BaiToanTimSos", ThisKey="ClassListId", OtherKey="ThuocKhoiLop")]
		public EntitySet<BaiToanTimSo> BaiToanTimSos
		{
			get
			{
				return this._BaiToanTimSos;
			}
			set
			{
				this._BaiToanTimSos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_BaiToanDemHinh", Storage="_BaiToanDemHinhs", ThisKey="ClassListId", OtherKey="ThuocKhoiLop")]
		public EntitySet<BaiToanDemHinh> BaiToanDemHinhs
		{
			get
			{
				return this._BaiToanDemHinhs;
			}
			set
			{
				this._BaiToanDemHinhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_BaiToanDaySo", Storage="_BaiToanDaySos", ThisKey="ClassListId", OtherKey="ThuocKhoiLop")]
		public EntitySet<BaiToanDaySo> BaiToanDaySos
		{
			get
			{
				return this._BaiToanDaySos;
			}
			set
			{
				this._BaiToanDaySos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CleverMathKinds(CleverMathKind entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = this;
		}
		
		private void detach_CleverMathKinds(CleverMathKind entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = null;
		}
		
		private void attach_MotPhepToans(MotPhepToan entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = this;
		}
		
		private void detach_MotPhepToans(MotPhepToan entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = null;
		}
		
		private void attach_PhepToanBaSoHangs(PhepToanBaSoHang entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = this;
		}
		
		private void detach_PhepToanBaSoHangs(PhepToanBaSoHang entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = null;
		}
		
		private void attach_DoiTuongHonKemNhaus(DoiTuongHonKemNhau entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = this;
		}
		
		private void detach_DoiTuongHonKemNhaus(DoiTuongHonKemNhau entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = null;
		}
		
		private void attach_BaiToanThoiGians(BaiToanThoiGian entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = this;
		}
		
		private void detach_BaiToanThoiGians(BaiToanThoiGian entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = null;
		}
		
		private void attach_BaiToanGhepOs(BaiToanGhepO entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = this;
		}
		
		private void detach_BaiToanGhepOs(BaiToanGhepO entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = null;
		}
		
		private void attach_BaiToanTimSos(BaiToanTimSo entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = this;
		}
		
		private void detach_BaiToanTimSos(BaiToanTimSo entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = null;
		}
		
		private void attach_BaiToanDemHinhs(BaiToanDemHinh entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = this;
		}
		
		private void detach_BaiToanDemHinhs(BaiToanDemHinh entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = null;
		}
		
		private void attach_BaiToanDaySos(BaiToanDaySo entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = this;
		}
		
		private void detach_BaiToanDaySos(BaiToanDaySo entity)
		{
			this.SendPropertyChanging();
			entity.ClassList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MotPhepToan")]
	public partial class MotPhepToan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaCauHoi;
		
		private string _SoHangThuNhat;
		
		private string _PhepToan;
		
		private string _SoHangThuHai;
		
		private string _DauQuanHe;
		
		private string _KetQuaPhepToan;
		
		private string _DapAn;
		
		private string _ThuocKhoiLop;
		
		private int _SapXepThuTu;
		
		private string _PhamViPhepToan;
		
		private EntityRef<ClassList> _ClassList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(System.Guid value);
    partial void OnMaCauHoiChanged();
    partial void OnSoHangThuNhatChanging(string value);
    partial void OnSoHangThuNhatChanged();
    partial void OnPhepToanChanging(string value);
    partial void OnPhepToanChanged();
    partial void OnSoHangThuHaiChanging(string value);
    partial void OnSoHangThuHaiChanged();
    partial void OnDauQuanHeChanging(string value);
    partial void OnDauQuanHeChanged();
    partial void OnKetQuaPhepToanChanging(string value);
    partial void OnKetQuaPhepToanChanged();
    partial void OnDapAnChanging(string value);
    partial void OnDapAnChanged();
    partial void OnThuocKhoiLopChanging(string value);
    partial void OnThuocKhoiLopChanged();
    partial void OnSapXepThuTuChanging(int value);
    partial void OnSapXepThuTuChanged();
    partial void OnPhamViPhepToanChanging(string value);
    partial void OnPhamViPhepToanChanged();
    #endregion
		
		public MotPhepToan()
		{
			this._ClassList = default(EntityRef<ClassList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHangThuNhat", DbType="NVarChar(50)")]
		public string SoHangThuNhat
		{
			get
			{
				return this._SoHangThuNhat;
			}
			set
			{
				if ((this._SoHangThuNhat != value))
				{
					this.OnSoHangThuNhatChanging(value);
					this.SendPropertyChanging();
					this._SoHangThuNhat = value;
					this.SendPropertyChanged("SoHangThuNhat");
					this.OnSoHangThuNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhepToan", DbType="NVarChar(50)")]
		public string PhepToan
		{
			get
			{
				return this._PhepToan;
			}
			set
			{
				if ((this._PhepToan != value))
				{
					this.OnPhepToanChanging(value);
					this.SendPropertyChanging();
					this._PhepToan = value;
					this.SendPropertyChanged("PhepToan");
					this.OnPhepToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHangThuHai", DbType="NVarChar(50)")]
		public string SoHangThuHai
		{
			get
			{
				return this._SoHangThuHai;
			}
			set
			{
				if ((this._SoHangThuHai != value))
				{
					this.OnSoHangThuHaiChanging(value);
					this.SendPropertyChanging();
					this._SoHangThuHai = value;
					this.SendPropertyChanged("SoHangThuHai");
					this.OnSoHangThuHaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DauQuanHe", DbType="NVarChar(50)")]
		public string DauQuanHe
		{
			get
			{
				return this._DauQuanHe;
			}
			set
			{
				if ((this._DauQuanHe != value))
				{
					this.OnDauQuanHeChanging(value);
					this.SendPropertyChanging();
					this._DauQuanHe = value;
					this.SendPropertyChanged("DauQuanHe");
					this.OnDauQuanHeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KetQuaPhepToan", DbType="NVarChar(50)")]
		public string KetQuaPhepToan
		{
			get
			{
				return this._KetQuaPhepToan;
			}
			set
			{
				if ((this._KetQuaPhepToan != value))
				{
					this.OnKetQuaPhepToanChanging(value);
					this.SendPropertyChanging();
					this._KetQuaPhepToan = value;
					this.SendPropertyChanged("KetQuaPhepToan");
					this.OnKetQuaPhepToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn", DbType="NVarChar(50)")]
		public string DapAn
		{
			get
			{
				return this._DapAn;
			}
			set
			{
				if ((this._DapAn != value))
				{
					this.OnDapAnChanging(value);
					this.SendPropertyChanging();
					this._DapAn = value;
					this.SendPropertyChanged("DapAn");
					this.OnDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuocKhoiLop", DbType="NVarChar(50)")]
		public string ThuocKhoiLop
		{
			get
			{
				return this._ThuocKhoiLop;
			}
			set
			{
				if ((this._ThuocKhoiLop != value))
				{
					if (this._ClassList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThuocKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._ThuocKhoiLop = value;
					this.SendPropertyChanged("ThuocKhoiLop");
					this.OnThuocKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SapXepThuTu", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SapXepThuTu
		{
			get
			{
				return this._SapXepThuTu;
			}
			set
			{
				if ((this._SapXepThuTu != value))
				{
					this.OnSapXepThuTuChanging(value);
					this.SendPropertyChanging();
					this._SapXepThuTu = value;
					this.SendPropertyChanged("SapXepThuTu");
					this.OnSapXepThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhamViPhepToan", DbType="NVarChar(50)")]
		public string PhamViPhepToan
		{
			get
			{
				return this._PhamViPhepToan;
			}
			set
			{
				if ((this._PhamViPhepToan != value))
				{
					this.OnPhamViPhepToanChanging(value);
					this.SendPropertyChanging();
					this._PhamViPhepToan = value;
					this.SendPropertyChanged("PhamViPhepToan");
					this.OnPhamViPhepToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_MotPhepToan", Storage="_ClassList", ThisKey="ThuocKhoiLop", OtherKey="ClassListId", IsForeignKey=true)]
		public ClassList ClassList
		{
			get
			{
				return this._ClassList.Entity;
			}
			set
			{
				ClassList previousValue = this._ClassList.Entity;
				if (((previousValue != value) 
							|| (this._ClassList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassList.Entity = null;
						previousValue.MotPhepToans.Remove(this);
					}
					this._ClassList.Entity = value;
					if ((value != null))
					{
						value.MotPhepToans.Add(this);
						this._ThuocKhoiLop = value.ClassListId;
					}
					else
					{
						this._ThuocKhoiLop = default(string);
					}
					this.SendPropertyChanged("ClassList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhepToanBaSoHang")]
	public partial class PhepToanBaSoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaCauHoi;
		
		private string _ThuocKhoiLop;
		
		private int _SapXepThuTu;
		
		private string _PhamViPhepToan;
		
		private string _SoHangThuNhat;
		
		private string _PhepToanThuNhat;
		
		private string _SoHangThuHai;
		
		private string _PhepToanThuHai;
		
		private string _SoHangThuBa;
		
		private string _QuanHePhepToan;
		
		private string _KetQuaPhepToan;
		
		private string _DapAnThuNhat;
		
		private string _DapAnThuHai;
		
		private EntityRef<ClassList> _ClassList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(System.Guid value);
    partial void OnMaCauHoiChanged();
    partial void OnThuocKhoiLopChanging(string value);
    partial void OnThuocKhoiLopChanged();
    partial void OnSapXepThuTuChanging(int value);
    partial void OnSapXepThuTuChanged();
    partial void OnPhamViPhepToanChanging(string value);
    partial void OnPhamViPhepToanChanged();
    partial void OnSoHangThuNhatChanging(string value);
    partial void OnSoHangThuNhatChanged();
    partial void OnPhepToanThuNhatChanging(string value);
    partial void OnPhepToanThuNhatChanged();
    partial void OnSoHangThuHaiChanging(string value);
    partial void OnSoHangThuHaiChanged();
    partial void OnPhepToanThuHaiChanging(string value);
    partial void OnPhepToanThuHaiChanged();
    partial void OnSoHangThuBaChanging(string value);
    partial void OnSoHangThuBaChanged();
    partial void OnQuanHePhepToanChanging(string value);
    partial void OnQuanHePhepToanChanged();
    partial void OnKetQuaPhepToanChanging(string value);
    partial void OnKetQuaPhepToanChanged();
    partial void OnDapAnThuNhatChanging(string value);
    partial void OnDapAnThuNhatChanged();
    partial void OnDapAnThuHaiChanging(string value);
    partial void OnDapAnThuHaiChanged();
    #endregion
		
		public PhepToanBaSoHang()
		{
			this._ClassList = default(EntityRef<ClassList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuocKhoiLop", DbType="NVarChar(50)")]
		public string ThuocKhoiLop
		{
			get
			{
				return this._ThuocKhoiLop;
			}
			set
			{
				if ((this._ThuocKhoiLop != value))
				{
					if (this._ClassList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThuocKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._ThuocKhoiLop = value;
					this.SendPropertyChanged("ThuocKhoiLop");
					this.OnThuocKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SapXepThuTu", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SapXepThuTu
		{
			get
			{
				return this._SapXepThuTu;
			}
			set
			{
				if ((this._SapXepThuTu != value))
				{
					this.OnSapXepThuTuChanging(value);
					this.SendPropertyChanging();
					this._SapXepThuTu = value;
					this.SendPropertyChanged("SapXepThuTu");
					this.OnSapXepThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhamViPhepToan", DbType="NVarChar(50)")]
		public string PhamViPhepToan
		{
			get
			{
				return this._PhamViPhepToan;
			}
			set
			{
				if ((this._PhamViPhepToan != value))
				{
					this.OnPhamViPhepToanChanging(value);
					this.SendPropertyChanging();
					this._PhamViPhepToan = value;
					this.SendPropertyChanged("PhamViPhepToan");
					this.OnPhamViPhepToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHangThuNhat", DbType="NVarChar(50)")]
		public string SoHangThuNhat
		{
			get
			{
				return this._SoHangThuNhat;
			}
			set
			{
				if ((this._SoHangThuNhat != value))
				{
					this.OnSoHangThuNhatChanging(value);
					this.SendPropertyChanging();
					this._SoHangThuNhat = value;
					this.SendPropertyChanged("SoHangThuNhat");
					this.OnSoHangThuNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhepToanThuNhat", DbType="NVarChar(50)")]
		public string PhepToanThuNhat
		{
			get
			{
				return this._PhepToanThuNhat;
			}
			set
			{
				if ((this._PhepToanThuNhat != value))
				{
					this.OnPhepToanThuNhatChanging(value);
					this.SendPropertyChanging();
					this._PhepToanThuNhat = value;
					this.SendPropertyChanged("PhepToanThuNhat");
					this.OnPhepToanThuNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHangThuHai", DbType="NVarChar(50)")]
		public string SoHangThuHai
		{
			get
			{
				return this._SoHangThuHai;
			}
			set
			{
				if ((this._SoHangThuHai != value))
				{
					this.OnSoHangThuHaiChanging(value);
					this.SendPropertyChanging();
					this._SoHangThuHai = value;
					this.SendPropertyChanged("SoHangThuHai");
					this.OnSoHangThuHaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhepToanThuHai", DbType="NVarChar(50)")]
		public string PhepToanThuHai
		{
			get
			{
				return this._PhepToanThuHai;
			}
			set
			{
				if ((this._PhepToanThuHai != value))
				{
					this.OnPhepToanThuHaiChanging(value);
					this.SendPropertyChanging();
					this._PhepToanThuHai = value;
					this.SendPropertyChanged("PhepToanThuHai");
					this.OnPhepToanThuHaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHangThuBa", DbType="NVarChar(50)")]
		public string SoHangThuBa
		{
			get
			{
				return this._SoHangThuBa;
			}
			set
			{
				if ((this._SoHangThuBa != value))
				{
					this.OnSoHangThuBaChanging(value);
					this.SendPropertyChanging();
					this._SoHangThuBa = value;
					this.SendPropertyChanged("SoHangThuBa");
					this.OnSoHangThuBaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanHePhepToan", DbType="NVarChar(50)")]
		public string QuanHePhepToan
		{
			get
			{
				return this._QuanHePhepToan;
			}
			set
			{
				if ((this._QuanHePhepToan != value))
				{
					this.OnQuanHePhepToanChanging(value);
					this.SendPropertyChanging();
					this._QuanHePhepToan = value;
					this.SendPropertyChanged("QuanHePhepToan");
					this.OnQuanHePhepToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KetQuaPhepToan", DbType="NVarChar(50)")]
		public string KetQuaPhepToan
		{
			get
			{
				return this._KetQuaPhepToan;
			}
			set
			{
				if ((this._KetQuaPhepToan != value))
				{
					this.OnKetQuaPhepToanChanging(value);
					this.SendPropertyChanging();
					this._KetQuaPhepToan = value;
					this.SendPropertyChanged("KetQuaPhepToan");
					this.OnKetQuaPhepToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnThuNhat", DbType="NVarChar(50)")]
		public string DapAnThuNhat
		{
			get
			{
				return this._DapAnThuNhat;
			}
			set
			{
				if ((this._DapAnThuNhat != value))
				{
					this.OnDapAnThuNhatChanging(value);
					this.SendPropertyChanging();
					this._DapAnThuNhat = value;
					this.SendPropertyChanged("DapAnThuNhat");
					this.OnDapAnThuNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnThuHai", DbType="NVarChar(50)")]
		public string DapAnThuHai
		{
			get
			{
				return this._DapAnThuHai;
			}
			set
			{
				if ((this._DapAnThuHai != value))
				{
					this.OnDapAnThuHaiChanging(value);
					this.SendPropertyChanging();
					this._DapAnThuHai = value;
					this.SendPropertyChanged("DapAnThuHai");
					this.OnDapAnThuHaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_PhepToanBaSoHang", Storage="_ClassList", ThisKey="ThuocKhoiLop", OtherKey="ClassListId", IsForeignKey=true)]
		public ClassList ClassList
		{
			get
			{
				return this._ClassList.Entity;
			}
			set
			{
				ClassList previousValue = this._ClassList.Entity;
				if (((previousValue != value) 
							|| (this._ClassList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassList.Entity = null;
						previousValue.PhepToanBaSoHangs.Remove(this);
					}
					this._ClassList.Entity = value;
					if ((value != null))
					{
						value.PhepToanBaSoHangs.Add(this);
						this._ThuocKhoiLop = value.ClassListId;
					}
					else
					{
						this._ThuocKhoiLop = default(string);
					}
					this.SendPropertyChanged("ClassList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachTen")]
	public partial class DanhSachTen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ten;
		
		private int _MaHoTen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnMaHoTenChanging(int value);
    partial void OnMaHoTenChanged();
    #endregion
		
		public DanhSachTen()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(255)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoTen", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHoTen
		{
			get
			{
				return this._MaHoTen;
			}
			set
			{
				if ((this._MaHoTen != value))
				{
					this.OnMaHoTenChanging(value);
					this.SendPropertyChanging();
					this._MaHoTen = value;
					this.SendPropertyChanged("MaHoTen");
					this.OnMaHoTenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoiTuongHonKemNhau")]
	public partial class DoiTuongHonKemNhau : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaCauHoi;
		
		private string _NoiDungCauHoi;
		
		private string _DapAnCauHoi;
		
		private string _ThuocKhoiLop;
		
		private int _SapXepThuTu;
		
		private string _LoiGiaiCauHoi;
		
		private string _KetLuanCauHoi;
		
		private System.Nullable<int> _SoLuongDapAn;
		
		private System.Nullable<int> _SoLuongDoiTuong;
		
		private string _PhamViPhepToan;
		
		private string _LoaiCauHoi;
		
		private string _ThanhPhanCauHoi;
		
		private EntityRef<ClassList> _ClassList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(System.Guid value);
    partial void OnMaCauHoiChanged();
    partial void OnNoiDungCauHoiChanging(string value);
    partial void OnNoiDungCauHoiChanged();
    partial void OnDapAnCauHoiChanging(string value);
    partial void OnDapAnCauHoiChanged();
    partial void OnThuocKhoiLopChanging(string value);
    partial void OnThuocKhoiLopChanged();
    partial void OnSapXepThuTuChanging(int value);
    partial void OnSapXepThuTuChanged();
    partial void OnLoiGiaiCauHoiChanging(string value);
    partial void OnLoiGiaiCauHoiChanged();
    partial void OnKetLuanCauHoiChanging(string value);
    partial void OnKetLuanCauHoiChanged();
    partial void OnSoLuongDapAnChanging(System.Nullable<int> value);
    partial void OnSoLuongDapAnChanged();
    partial void OnSoLuongDoiTuongChanging(System.Nullable<int> value);
    partial void OnSoLuongDoiTuongChanged();
    partial void OnPhamViPhepToanChanging(string value);
    partial void OnPhamViPhepToanChanged();
    partial void OnLoaiCauHoiChanging(string value);
    partial void OnLoaiCauHoiChanged();
    partial void OnThanhPhanCauHoiChanging(string value);
    partial void OnThanhPhanCauHoiChanged();
    #endregion
		
		public DoiTuongHonKemNhau()
		{
			this._ClassList = default(EntityRef<ClassList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungCauHoi", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDungCauHoi
		{
			get
			{
				return this._NoiDungCauHoi;
			}
			set
			{
				if ((this._NoiDungCauHoi != value))
				{
					this.OnNoiDungCauHoiChanging(value);
					this.SendPropertyChanging();
					this._NoiDungCauHoi = value;
					this.SendPropertyChanged("NoiDungCauHoi");
					this.OnNoiDungCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnCauHoi", DbType="NVarChar(50)")]
		public string DapAnCauHoi
		{
			get
			{
				return this._DapAnCauHoi;
			}
			set
			{
				if ((this._DapAnCauHoi != value))
				{
					this.OnDapAnCauHoiChanging(value);
					this.SendPropertyChanging();
					this._DapAnCauHoi = value;
					this.SendPropertyChanged("DapAnCauHoi");
					this.OnDapAnCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuocKhoiLop", DbType="NVarChar(50)")]
		public string ThuocKhoiLop
		{
			get
			{
				return this._ThuocKhoiLop;
			}
			set
			{
				if ((this._ThuocKhoiLop != value))
				{
					if (this._ClassList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThuocKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._ThuocKhoiLop = value;
					this.SendPropertyChanged("ThuocKhoiLop");
					this.OnThuocKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SapXepThuTu", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SapXepThuTu
		{
			get
			{
				return this._SapXepThuTu;
			}
			set
			{
				if ((this._SapXepThuTu != value))
				{
					this.OnSapXepThuTuChanging(value);
					this.SendPropertyChanging();
					this._SapXepThuTu = value;
					this.SendPropertyChanged("SapXepThuTu");
					this.OnSapXepThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoiGiaiCauHoi", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string LoiGiaiCauHoi
		{
			get
			{
				return this._LoiGiaiCauHoi;
			}
			set
			{
				if ((this._LoiGiaiCauHoi != value))
				{
					this.OnLoiGiaiCauHoiChanging(value);
					this.SendPropertyChanging();
					this._LoiGiaiCauHoi = value;
					this.SendPropertyChanged("LoiGiaiCauHoi");
					this.OnLoiGiaiCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KetLuanCauHoi", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string KetLuanCauHoi
		{
			get
			{
				return this._KetLuanCauHoi;
			}
			set
			{
				if ((this._KetLuanCauHoi != value))
				{
					this.OnKetLuanCauHoiChanging(value);
					this.SendPropertyChanging();
					this._KetLuanCauHoi = value;
					this.SendPropertyChanged("KetLuanCauHoi");
					this.OnKetLuanCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDapAn", DbType="Int")]
		public System.Nullable<int> SoLuongDapAn
		{
			get
			{
				return this._SoLuongDapAn;
			}
			set
			{
				if ((this._SoLuongDapAn != value))
				{
					this.OnSoLuongDapAnChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDapAn = value;
					this.SendPropertyChanged("SoLuongDapAn");
					this.OnSoLuongDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDoiTuong", DbType="Int")]
		public System.Nullable<int> SoLuongDoiTuong
		{
			get
			{
				return this._SoLuongDoiTuong;
			}
			set
			{
				if ((this._SoLuongDoiTuong != value))
				{
					this.OnSoLuongDoiTuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDoiTuong = value;
					this.SendPropertyChanged("SoLuongDoiTuong");
					this.OnSoLuongDoiTuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhamViPhepToan", DbType="NVarChar(50)")]
		public string PhamViPhepToan
		{
			get
			{
				return this._PhamViPhepToan;
			}
			set
			{
				if ((this._PhamViPhepToan != value))
				{
					this.OnPhamViPhepToanChanging(value);
					this.SendPropertyChanging();
					this._PhamViPhepToan = value;
					this.SendPropertyChanged("PhamViPhepToan");
					this.OnPhamViPhepToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiCauHoi", DbType="NVarChar(50)")]
		public string LoaiCauHoi
		{
			get
			{
				return this._LoaiCauHoi;
			}
			set
			{
				if ((this._LoaiCauHoi != value))
				{
					this.OnLoaiCauHoiChanging(value);
					this.SendPropertyChanging();
					this._LoaiCauHoi = value;
					this.SendPropertyChanged("LoaiCauHoi");
					this.OnLoaiCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhPhanCauHoi", DbType="NVarChar(250)")]
		public string ThanhPhanCauHoi
		{
			get
			{
				return this._ThanhPhanCauHoi;
			}
			set
			{
				if ((this._ThanhPhanCauHoi != value))
				{
					this.OnThanhPhanCauHoiChanging(value);
					this.SendPropertyChanging();
					this._ThanhPhanCauHoi = value;
					this.SendPropertyChanged("ThanhPhanCauHoi");
					this.OnThanhPhanCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_DoiTuongHonKemNhau", Storage="_ClassList", ThisKey="ThuocKhoiLop", OtherKey="ClassListId", IsForeignKey=true)]
		public ClassList ClassList
		{
			get
			{
				return this._ClassList.Entity;
			}
			set
			{
				ClassList previousValue = this._ClassList.Entity;
				if (((previousValue != value) 
							|| (this._ClassList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassList.Entity = null;
						previousValue.DoiTuongHonKemNhaus.Remove(this);
					}
					this._ClassList.Entity = value;
					if ((value != null))
					{
						value.DoiTuongHonKemNhaus.Add(this);
						this._ThuocKhoiLop = value.ClassListId;
					}
					else
					{
						this._ThuocKhoiLop = default(string);
					}
					this.SendPropertyChanged("ClassList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachDoiTuong")]
	public partial class DanhSachDoiTuong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDoiTuong;
		
		private string _TenDoiTuong;
		
		private string _DonViTinh;
		
		private string _HinhAnh;
		
		private string _ThaoTacDoiTuong;
		
		private string _TienToChuNgu;
		
		private System.Nullable<bool> _ThuocVeTuNhien;
		
		private string _SoHuu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDoiTuongChanging(int value);
    partial void OnMaDoiTuongChanged();
    partial void OnTenDoiTuongChanging(string value);
    partial void OnTenDoiTuongChanged();
    partial void OnDonViTinhChanging(string value);
    partial void OnDonViTinhChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnThaoTacDoiTuongChanging(string value);
    partial void OnThaoTacDoiTuongChanged();
    partial void OnTienToChuNguChanging(string value);
    partial void OnTienToChuNguChanged();
    partial void OnThuocVeTuNhienChanging(System.Nullable<bool> value);
    partial void OnThuocVeTuNhienChanged();
    partial void OnSoHuuChanging(string value);
    partial void OnSoHuuChanged();
    #endregion
		
		public DanhSachDoiTuong()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDoiTuong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDoiTuong
		{
			get
			{
				return this._MaDoiTuong;
			}
			set
			{
				if ((this._MaDoiTuong != value))
				{
					this.OnMaDoiTuongChanging(value);
					this.SendPropertyChanging();
					this._MaDoiTuong = value;
					this.SendPropertyChanged("MaDoiTuong");
					this.OnMaDoiTuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDoiTuong", DbType="NVarChar(250)")]
		public string TenDoiTuong
		{
			get
			{
				return this._TenDoiTuong;
			}
			set
			{
				if ((this._TenDoiTuong != value))
				{
					this.OnTenDoiTuongChanging(value);
					this.SendPropertyChanging();
					this._TenDoiTuong = value;
					this.SendPropertyChanged("TenDoiTuong");
					this.OnTenDoiTuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinh", DbType="NVarChar(250)")]
		public string DonViTinh
		{
			get
			{
				return this._DonViTinh;
			}
			set
			{
				if ((this._DonViTinh != value))
				{
					this.OnDonViTinhChanging(value);
					this.SendPropertyChanging();
					this._DonViTinh = value;
					this.SendPropertyChanged("DonViTinh");
					this.OnDonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(250)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThaoTacDoiTuong", DbType="NVarChar(250)")]
		public string ThaoTacDoiTuong
		{
			get
			{
				return this._ThaoTacDoiTuong;
			}
			set
			{
				if ((this._ThaoTacDoiTuong != value))
				{
					this.OnThaoTacDoiTuongChanging(value);
					this.SendPropertyChanging();
					this._ThaoTacDoiTuong = value;
					this.SendPropertyChanged("ThaoTacDoiTuong");
					this.OnThaoTacDoiTuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienToChuNgu", DbType="NVarChar(250)")]
		public string TienToChuNgu
		{
			get
			{
				return this._TienToChuNgu;
			}
			set
			{
				if ((this._TienToChuNgu != value))
				{
					this.OnTienToChuNguChanging(value);
					this.SendPropertyChanging();
					this._TienToChuNgu = value;
					this.SendPropertyChanged("TienToChuNgu");
					this.OnTienToChuNguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuocVeTuNhien", DbType="Bit")]
		public System.Nullable<bool> ThuocVeTuNhien
		{
			get
			{
				return this._ThuocVeTuNhien;
			}
			set
			{
				if ((this._ThuocVeTuNhien != value))
				{
					this.OnThuocVeTuNhienChanging(value);
					this.SendPropertyChanging();
					this._ThuocVeTuNhien = value;
					this.SendPropertyChanged("ThuocVeTuNhien");
					this.OnThuocVeTuNhienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHuu", DbType="NVarChar(50)")]
		public string SoHuu
		{
			get
			{
				return this._SoHuu;
			}
			set
			{
				if ((this._SoHuu != value))
				{
					this.OnSoHuuChanging(value);
					this.SendPropertyChanging();
					this._SoHuu = value;
					this.SendPropertyChanged("SoHuu");
					this.OnSoHuuChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiToanThoiGian")]
	public partial class BaiToanThoiGian : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaCauHoi;
		
		private int _Gio;
		
		private int _Phut;
		
		private int _Giay;
		
		private string _DapAn;
		
		private int _SoDapAn;
		
		private int _ThuTuSapXep;
		
		private string _ThuocKhoiLop;
		
		private EntityRef<ClassList> _ClassList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(System.Guid value);
    partial void OnMaCauHoiChanged();
    partial void OnGioChanging(int value);
    partial void OnGioChanged();
    partial void OnPhutChanging(int value);
    partial void OnPhutChanged();
    partial void OnGiayChanging(int value);
    partial void OnGiayChanged();
    partial void OnDapAnChanging(string value);
    partial void OnDapAnChanged();
    partial void OnSoDapAnChanging(int value);
    partial void OnSoDapAnChanged();
    partial void OnThuTuSapXepChanging(int value);
    partial void OnThuTuSapXepChanged();
    partial void OnThuocKhoiLopChanging(string value);
    partial void OnThuocKhoiLopChanged();
    #endregion
		
		public BaiToanThoiGian()
		{
			this._ClassList = default(EntityRef<ClassList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gio", DbType="Int NOT NULL")]
		public int Gio
		{
			get
			{
				return this._Gio;
			}
			set
			{
				if ((this._Gio != value))
				{
					this.OnGioChanging(value);
					this.SendPropertyChanging();
					this._Gio = value;
					this.SendPropertyChanged("Gio");
					this.OnGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phut", DbType="Int NOT NULL")]
		public int Phut
		{
			get
			{
				return this._Phut;
			}
			set
			{
				if ((this._Phut != value))
				{
					this.OnPhutChanging(value);
					this.SendPropertyChanging();
					this._Phut = value;
					this.SendPropertyChanged("Phut");
					this.OnPhutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giay", DbType="Int NOT NULL")]
		public int Giay
		{
			get
			{
				return this._Giay;
			}
			set
			{
				if ((this._Giay != value))
				{
					this.OnGiayChanging(value);
					this.SendPropertyChanging();
					this._Giay = value;
					this.SendPropertyChanged("Giay");
					this.OnGiayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DapAn
		{
			get
			{
				return this._DapAn;
			}
			set
			{
				if ((this._DapAn != value))
				{
					this.OnDapAnChanging(value);
					this.SendPropertyChanging();
					this._DapAn = value;
					this.SendPropertyChanged("DapAn");
					this.OnDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDapAn", DbType="Int NOT NULL")]
		public int SoDapAn
		{
			get
			{
				return this._SoDapAn;
			}
			set
			{
				if ((this._SoDapAn != value))
				{
					this.OnSoDapAnChanging(value);
					this.SendPropertyChanging();
					this._SoDapAn = value;
					this.SendPropertyChanged("SoDapAn");
					this.OnSoDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTuSapXep", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ThuTuSapXep
		{
			get
			{
				return this._ThuTuSapXep;
			}
			set
			{
				if ((this._ThuTuSapXep != value))
				{
					this.OnThuTuSapXepChanging(value);
					this.SendPropertyChanging();
					this._ThuTuSapXep = value;
					this.SendPropertyChanged("ThuTuSapXep");
					this.OnThuTuSapXepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuocKhoiLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ThuocKhoiLop
		{
			get
			{
				return this._ThuocKhoiLop;
			}
			set
			{
				if ((this._ThuocKhoiLop != value))
				{
					if (this._ClassList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThuocKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._ThuocKhoiLop = value;
					this.SendPropertyChanged("ThuocKhoiLop");
					this.OnThuocKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_BaiToanThoiGian", Storage="_ClassList", ThisKey="ThuocKhoiLop", OtherKey="ClassListId", IsForeignKey=true)]
		public ClassList ClassList
		{
			get
			{
				return this._ClassList.Entity;
			}
			set
			{
				ClassList previousValue = this._ClassList.Entity;
				if (((previousValue != value) 
							|| (this._ClassList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassList.Entity = null;
						previousValue.BaiToanThoiGians.Remove(this);
					}
					this._ClassList.Entity = value;
					if ((value != null))
					{
						value.BaiToanThoiGians.Add(this);
						this._ThuocKhoiLop = value.ClassListId;
					}
					else
					{
						this._ThuocKhoiLop = default(string);
					}
					this.SendPropertyChanged("ClassList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiToanGhepO")]
	public partial class BaiToanGhepO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaBaiToan;
		
		private string _NoiDungBaiToan;
		
		private string _NoiDungDapAn;
		
		private int _ChieuNgang;
		
		private int _ChieuDoc;
		
		private string _ThuocKhoiLop;
		
		private string _PhamViPhepToan;
		
		private int _ThuTuSapXep;
		
		private string _NoiDungGiaTri;
		
		private string _LoaiBaiToan;
		
		private EntityRef<ClassList> _ClassList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaiToanChanging(System.Guid value);
    partial void OnMaBaiToanChanged();
    partial void OnNoiDungBaiToanChanging(string value);
    partial void OnNoiDungBaiToanChanged();
    partial void OnNoiDungDapAnChanging(string value);
    partial void OnNoiDungDapAnChanged();
    partial void OnChieuNgangChanging(int value);
    partial void OnChieuNgangChanged();
    partial void OnChieuDocChanging(int value);
    partial void OnChieuDocChanged();
    partial void OnThuocKhoiLopChanging(string value);
    partial void OnThuocKhoiLopChanged();
    partial void OnPhamViPhepToanChanging(string value);
    partial void OnPhamViPhepToanChanged();
    partial void OnThuTuSapXepChanging(int value);
    partial void OnThuTuSapXepChanged();
    partial void OnNoiDungGiaTriChanging(string value);
    partial void OnNoiDungGiaTriChanged();
    partial void OnLoaiBaiToanChanging(string value);
    partial void OnLoaiBaiToanChanged();
    #endregion
		
		public BaiToanGhepO()
		{
			this._ClassList = default(EntityRef<ClassList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaiToan", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaBaiToan
		{
			get
			{
				return this._MaBaiToan;
			}
			set
			{
				if ((this._MaBaiToan != value))
				{
					this.OnMaBaiToanChanging(value);
					this.SendPropertyChanging();
					this._MaBaiToan = value;
					this.SendPropertyChanged("MaBaiToan");
					this.OnMaBaiToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungBaiToan", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string NoiDungBaiToan
		{
			get
			{
				return this._NoiDungBaiToan;
			}
			set
			{
				if ((this._NoiDungBaiToan != value))
				{
					this.OnNoiDungBaiToanChanging(value);
					this.SendPropertyChanging();
					this._NoiDungBaiToan = value;
					this.SendPropertyChanged("NoiDungBaiToan");
					this.OnNoiDungBaiToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungDapAn", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NoiDungDapAn
		{
			get
			{
				return this._NoiDungDapAn;
			}
			set
			{
				if ((this._NoiDungDapAn != value))
				{
					this.OnNoiDungDapAnChanging(value);
					this.SendPropertyChanging();
					this._NoiDungDapAn = value;
					this.SendPropertyChanged("NoiDungDapAn");
					this.OnNoiDungDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChieuNgang", DbType="Int NOT NULL")]
		public int ChieuNgang
		{
			get
			{
				return this._ChieuNgang;
			}
			set
			{
				if ((this._ChieuNgang != value))
				{
					this.OnChieuNgangChanging(value);
					this.SendPropertyChanging();
					this._ChieuNgang = value;
					this.SendPropertyChanged("ChieuNgang");
					this.OnChieuNgangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChieuDoc", DbType="Int NOT NULL")]
		public int ChieuDoc
		{
			get
			{
				return this._ChieuDoc;
			}
			set
			{
				if ((this._ChieuDoc != value))
				{
					this.OnChieuDocChanging(value);
					this.SendPropertyChanging();
					this._ChieuDoc = value;
					this.SendPropertyChanged("ChieuDoc");
					this.OnChieuDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuocKhoiLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ThuocKhoiLop
		{
			get
			{
				return this._ThuocKhoiLop;
			}
			set
			{
				if ((this._ThuocKhoiLop != value))
				{
					if (this._ClassList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThuocKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._ThuocKhoiLop = value;
					this.SendPropertyChanged("ThuocKhoiLop");
					this.OnThuocKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhamViPhepToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhamViPhepToan
		{
			get
			{
				return this._PhamViPhepToan;
			}
			set
			{
				if ((this._PhamViPhepToan != value))
				{
					this.OnPhamViPhepToanChanging(value);
					this.SendPropertyChanging();
					this._PhamViPhepToan = value;
					this.SendPropertyChanged("PhamViPhepToan");
					this.OnPhamViPhepToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTuSapXep", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ThuTuSapXep
		{
			get
			{
				return this._ThuTuSapXep;
			}
			set
			{
				if ((this._ThuTuSapXep != value))
				{
					this.OnThuTuSapXepChanging(value);
					this.SendPropertyChanging();
					this._ThuTuSapXep = value;
					this.SendPropertyChanged("ThuTuSapXep");
					this.OnThuTuSapXepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungGiaTri", DbType="NVarChar(250)")]
		public string NoiDungGiaTri
		{
			get
			{
				return this._NoiDungGiaTri;
			}
			set
			{
				if ((this._NoiDungGiaTri != value))
				{
					this.OnNoiDungGiaTriChanging(value);
					this.SendPropertyChanging();
					this._NoiDungGiaTri = value;
					this.SendPropertyChanged("NoiDungGiaTri");
					this.OnNoiDungGiaTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiBaiToan", DbType="NVarChar(50)")]
		public string LoaiBaiToan
		{
			get
			{
				return this._LoaiBaiToan;
			}
			set
			{
				if ((this._LoaiBaiToan != value))
				{
					this.OnLoaiBaiToanChanging(value);
					this.SendPropertyChanging();
					this._LoaiBaiToan = value;
					this.SendPropertyChanged("LoaiBaiToan");
					this.OnLoaiBaiToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_BaiToanGhepO", Storage="_ClassList", ThisKey="ThuocKhoiLop", OtherKey="ClassListId", IsForeignKey=true)]
		public ClassList ClassList
		{
			get
			{
				return this._ClassList.Entity;
			}
			set
			{
				ClassList previousValue = this._ClassList.Entity;
				if (((previousValue != value) 
							|| (this._ClassList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassList.Entity = null;
						previousValue.BaiToanGhepOs.Remove(this);
					}
					this._ClassList.Entity = value;
					if ((value != null))
					{
						value.BaiToanGhepOs.Add(this);
						this._ThuocKhoiLop = value.ClassListId;
					}
					else
					{
						this._ThuocKhoiLop = default(string);
					}
					this.SendPropertyChanged("ClassList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiToanTimSo")]
	public partial class BaiToanTimSo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaCauHoi;
		
		private string _ChuoiSoHienThi;
		
		private string _DapAn;
		
		private string _PhamViPhepToan;
		
		private string _ThuocKhoiLop;
		
		private string _PhanLoaiBaiToan;
		
		private string _UserControlName;
		
		private int _ThuTuSapXep;
		
		private string _LoiGiaiBaiToan;
		
		private EntityRef<ClassList> _ClassList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCauHoiChanging(System.Guid value);
    partial void OnMaCauHoiChanged();
    partial void OnChuoiSoHienThiChanging(string value);
    partial void OnChuoiSoHienThiChanged();
    partial void OnDapAnChanging(string value);
    partial void OnDapAnChanged();
    partial void OnPhamViPhepToanChanging(string value);
    partial void OnPhamViPhepToanChanged();
    partial void OnThuocKhoiLopChanging(string value);
    partial void OnThuocKhoiLopChanged();
    partial void OnPhanLoaiBaiToanChanging(string value);
    partial void OnPhanLoaiBaiToanChanged();
    partial void OnUserControlNameChanging(string value);
    partial void OnUserControlNameChanged();
    partial void OnThuTuSapXepChanging(int value);
    partial void OnThuTuSapXepChanged();
    partial void OnLoiGiaiBaiToanChanging(string value);
    partial void OnLoiGiaiBaiToanChanged();
    #endregion
		
		public BaiToanTimSo()
		{
			this._ClassList = default(EntityRef<ClassList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCauHoi", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaCauHoi
		{
			get
			{
				return this._MaCauHoi;
			}
			set
			{
				if ((this._MaCauHoi != value))
				{
					this.OnMaCauHoiChanging(value);
					this.SendPropertyChanging();
					this._MaCauHoi = value;
					this.SendPropertyChanged("MaCauHoi");
					this.OnMaCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChuoiSoHienThi", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string ChuoiSoHienThi
		{
			get
			{
				return this._ChuoiSoHienThi;
			}
			set
			{
				if ((this._ChuoiSoHienThi != value))
				{
					this.OnChuoiSoHienThiChanging(value);
					this.SendPropertyChanging();
					this._ChuoiSoHienThi = value;
					this.SendPropertyChanged("ChuoiSoHienThi");
					this.OnChuoiSoHienThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAn", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DapAn
		{
			get
			{
				return this._DapAn;
			}
			set
			{
				if ((this._DapAn != value))
				{
					this.OnDapAnChanging(value);
					this.SendPropertyChanging();
					this._DapAn = value;
					this.SendPropertyChanged("DapAn");
					this.OnDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhamViPhepToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhamViPhepToan
		{
			get
			{
				return this._PhamViPhepToan;
			}
			set
			{
				if ((this._PhamViPhepToan != value))
				{
					this.OnPhamViPhepToanChanging(value);
					this.SendPropertyChanging();
					this._PhamViPhepToan = value;
					this.SendPropertyChanged("PhamViPhepToan");
					this.OnPhamViPhepToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuocKhoiLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ThuocKhoiLop
		{
			get
			{
				return this._ThuocKhoiLop;
			}
			set
			{
				if ((this._ThuocKhoiLop != value))
				{
					if (this._ClassList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThuocKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._ThuocKhoiLop = value;
					this.SendPropertyChanged("ThuocKhoiLop");
					this.OnThuocKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanLoaiBaiToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhanLoaiBaiToan
		{
			get
			{
				return this._PhanLoaiBaiToan;
			}
			set
			{
				if ((this._PhanLoaiBaiToan != value))
				{
					this.OnPhanLoaiBaiToanChanging(value);
					this.SendPropertyChanging();
					this._PhanLoaiBaiToan = value;
					this.SendPropertyChanged("PhanLoaiBaiToan");
					this.OnPhanLoaiBaiToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserControlName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string UserControlName
		{
			get
			{
				return this._UserControlName;
			}
			set
			{
				if ((this._UserControlName != value))
				{
					this.OnUserControlNameChanging(value);
					this.SendPropertyChanging();
					this._UserControlName = value;
					this.SendPropertyChanged("UserControlName");
					this.OnUserControlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuTuSapXep", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ThuTuSapXep
		{
			get
			{
				return this._ThuTuSapXep;
			}
			set
			{
				if ((this._ThuTuSapXep != value))
				{
					this.OnThuTuSapXepChanging(value);
					this.SendPropertyChanging();
					this._ThuTuSapXep = value;
					this.SendPropertyChanged("ThuTuSapXep");
					this.OnThuTuSapXepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoiGiaiBaiToan", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string LoiGiaiBaiToan
		{
			get
			{
				return this._LoiGiaiBaiToan;
			}
			set
			{
				if ((this._LoiGiaiBaiToan != value))
				{
					this.OnLoiGiaiBaiToanChanging(value);
					this.SendPropertyChanging();
					this._LoiGiaiBaiToan = value;
					this.SendPropertyChanged("LoiGiaiBaiToan");
					this.OnLoiGiaiBaiToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_BaiToanTimSo", Storage="_ClassList", ThisKey="ThuocKhoiLop", OtherKey="ClassListId", IsForeignKey=true)]
		public ClassList ClassList
		{
			get
			{
				return this._ClassList.Entity;
			}
			set
			{
				ClassList previousValue = this._ClassList.Entity;
				if (((previousValue != value) 
							|| (this._ClassList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassList.Entity = null;
						previousValue.BaiToanTimSos.Remove(this);
					}
					this._ClassList.Entity = value;
					if ((value != null))
					{
						value.BaiToanTimSos.Add(this);
						this._ThuocKhoiLop = value.ClassListId;
					}
					else
					{
						this._ThuocKhoiLop = default(string);
					}
					this.SendPropertyChanged("ClassList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiToanDemHinh")]
	public partial class BaiToanDemHinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaBaiToan;
		
		private string _NoiDungBaiToan;
		
		private string _LoiGiaiBaiToan;
		
		private string _ThuocKhoiLop;
		
		private string _PhanLoaiBaiToan;
		
		private int _SapXepThuTu;
		
		private string _DapAnBaiToan;
		
		private EntityRef<ClassList> _ClassList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaiToanChanging(System.Guid value);
    partial void OnMaBaiToanChanged();
    partial void OnNoiDungBaiToanChanging(string value);
    partial void OnNoiDungBaiToanChanged();
    partial void OnLoiGiaiBaiToanChanging(string value);
    partial void OnLoiGiaiBaiToanChanged();
    partial void OnThuocKhoiLopChanging(string value);
    partial void OnThuocKhoiLopChanged();
    partial void OnPhanLoaiBaiToanChanging(string value);
    partial void OnPhanLoaiBaiToanChanged();
    partial void OnSapXepThuTuChanging(int value);
    partial void OnSapXepThuTuChanged();
    partial void OnDapAnBaiToanChanging(string value);
    partial void OnDapAnBaiToanChanged();
    #endregion
		
		public BaiToanDemHinh()
		{
			this._ClassList = default(EntityRef<ClassList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaiToan", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaBaiToan
		{
			get
			{
				return this._MaBaiToan;
			}
			set
			{
				if ((this._MaBaiToan != value))
				{
					this.OnMaBaiToanChanging(value);
					this.SendPropertyChanging();
					this._MaBaiToan = value;
					this.SendPropertyChanged("MaBaiToan");
					this.OnMaBaiToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungBaiToan", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDungBaiToan
		{
			get
			{
				return this._NoiDungBaiToan;
			}
			set
			{
				if ((this._NoiDungBaiToan != value))
				{
					this.OnNoiDungBaiToanChanging(value);
					this.SendPropertyChanging();
					this._NoiDungBaiToan = value;
					this.SendPropertyChanged("NoiDungBaiToan");
					this.OnNoiDungBaiToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoiGiaiBaiToan", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string LoiGiaiBaiToan
		{
			get
			{
				return this._LoiGiaiBaiToan;
			}
			set
			{
				if ((this._LoiGiaiBaiToan != value))
				{
					this.OnLoiGiaiBaiToanChanging(value);
					this.SendPropertyChanging();
					this._LoiGiaiBaiToan = value;
					this.SendPropertyChanged("LoiGiaiBaiToan");
					this.OnLoiGiaiBaiToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuocKhoiLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ThuocKhoiLop
		{
			get
			{
				return this._ThuocKhoiLop;
			}
			set
			{
				if ((this._ThuocKhoiLop != value))
				{
					if (this._ClassList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThuocKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._ThuocKhoiLop = value;
					this.SendPropertyChanged("ThuocKhoiLop");
					this.OnThuocKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanLoaiBaiToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhanLoaiBaiToan
		{
			get
			{
				return this._PhanLoaiBaiToan;
			}
			set
			{
				if ((this._PhanLoaiBaiToan != value))
				{
					this.OnPhanLoaiBaiToanChanging(value);
					this.SendPropertyChanging();
					this._PhanLoaiBaiToan = value;
					this.SendPropertyChanged("PhanLoaiBaiToan");
					this.OnPhanLoaiBaiToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SapXepThuTu", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SapXepThuTu
		{
			get
			{
				return this._SapXepThuTu;
			}
			set
			{
				if ((this._SapXepThuTu != value))
				{
					this.OnSapXepThuTuChanging(value);
					this.SendPropertyChanging();
					this._SapXepThuTu = value;
					this.SendPropertyChanged("SapXepThuTu");
					this.OnSapXepThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DapAnBaiToan", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DapAnBaiToan
		{
			get
			{
				return this._DapAnBaiToan;
			}
			set
			{
				if ((this._DapAnBaiToan != value))
				{
					this.OnDapAnBaiToanChanging(value);
					this.SendPropertyChanging();
					this._DapAnBaiToan = value;
					this.SendPropertyChanged("DapAnBaiToan");
					this.OnDapAnBaiToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_BaiToanDemHinh", Storage="_ClassList", ThisKey="ThuocKhoiLop", OtherKey="ClassListId", IsForeignKey=true)]
		public ClassList ClassList
		{
			get
			{
				return this._ClassList.Entity;
			}
			set
			{
				ClassList previousValue = this._ClassList.Entity;
				if (((previousValue != value) 
							|| (this._ClassList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassList.Entity = null;
						previousValue.BaiToanDemHinhs.Remove(this);
					}
					this._ClassList.Entity = value;
					if ((value != null))
					{
						value.BaiToanDemHinhs.Add(this);
						this._ThuocKhoiLop = value.ClassListId;
					}
					else
					{
						this._ThuocKhoiLop = default(string);
					}
					this.SendPropertyChanged("ClassList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiToanDaySo")]
	public partial class BaiToanDaySo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _MaDaySo;
		
		private string _NoiDungDaySo;
		
		private int _SoLuongPhanTu;
		
		private string _NoiDungDapAn;
		
		private string _NoiDungDapAnSai;
		
		private int _SoLuongDapAn;
		
		private string _PhanLoaiDaySo;
		
		private string _ThuocKhoiLop;
		
		private int _SapXepThuTu;
		
		private string _PhamViPhepToan;
		
		private string _CauHoiHienThi;
		
		private string _LoiGiaiCauHoi;
		
		private string _KetLuanCauHoi;
		
		private string _GoiYTraLoi;
		
		private EntityRef<ClassList> _ClassList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDaySoChanging(System.Guid value);
    partial void OnMaDaySoChanged();
    partial void OnNoiDungDaySoChanging(string value);
    partial void OnNoiDungDaySoChanged();
    partial void OnSoLuongPhanTuChanging(int value);
    partial void OnSoLuongPhanTuChanged();
    partial void OnNoiDungDapAnChanging(string value);
    partial void OnNoiDungDapAnChanged();
    partial void OnNoiDungDapAnSaiChanging(string value);
    partial void OnNoiDungDapAnSaiChanged();
    partial void OnSoLuongDapAnChanging(int value);
    partial void OnSoLuongDapAnChanged();
    partial void OnPhanLoaiDaySoChanging(string value);
    partial void OnPhanLoaiDaySoChanged();
    partial void OnThuocKhoiLopChanging(string value);
    partial void OnThuocKhoiLopChanged();
    partial void OnSapXepThuTuChanging(int value);
    partial void OnSapXepThuTuChanged();
    partial void OnPhamViPhepToanChanging(string value);
    partial void OnPhamViPhepToanChanged();
    partial void OnCauHoiHienThiChanging(string value);
    partial void OnCauHoiHienThiChanged();
    partial void OnLoiGiaiCauHoiChanging(string value);
    partial void OnLoiGiaiCauHoiChanged();
    partial void OnKetLuanCauHoiChanging(string value);
    partial void OnKetLuanCauHoiChanged();
    partial void OnGoiYTraLoiChanging(string value);
    partial void OnGoiYTraLoiChanged();
    #endregion
		
		public BaiToanDaySo()
		{
			this._ClassList = default(EntityRef<ClassList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDaySo", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid MaDaySo
		{
			get
			{
				return this._MaDaySo;
			}
			set
			{
				if ((this._MaDaySo != value))
				{
					this.OnMaDaySoChanging(value);
					this.SendPropertyChanging();
					this._MaDaySo = value;
					this.SendPropertyChanged("MaDaySo");
					this.OnMaDaySoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungDaySo", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NoiDungDaySo
		{
			get
			{
				return this._NoiDungDaySo;
			}
			set
			{
				if ((this._NoiDungDaySo != value))
				{
					this.OnNoiDungDaySoChanging(value);
					this.SendPropertyChanging();
					this._NoiDungDaySo = value;
					this.SendPropertyChanged("NoiDungDaySo");
					this.OnNoiDungDaySoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongPhanTu", DbType="Int NOT NULL")]
		public int SoLuongPhanTu
		{
			get
			{
				return this._SoLuongPhanTu;
			}
			set
			{
				if ((this._SoLuongPhanTu != value))
				{
					this.OnSoLuongPhanTuChanging(value);
					this.SendPropertyChanging();
					this._SoLuongPhanTu = value;
					this.SendPropertyChanged("SoLuongPhanTu");
					this.OnSoLuongPhanTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungDapAn", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string NoiDungDapAn
		{
			get
			{
				return this._NoiDungDapAn;
			}
			set
			{
				if ((this._NoiDungDapAn != value))
				{
					this.OnNoiDungDapAnChanging(value);
					this.SendPropertyChanging();
					this._NoiDungDapAn = value;
					this.SendPropertyChanged("NoiDungDapAn");
					this.OnNoiDungDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungDapAnSai", DbType="NVarChar(250)")]
		public string NoiDungDapAnSai
		{
			get
			{
				return this._NoiDungDapAnSai;
			}
			set
			{
				if ((this._NoiDungDapAnSai != value))
				{
					this.OnNoiDungDapAnSaiChanging(value);
					this.SendPropertyChanging();
					this._NoiDungDapAnSai = value;
					this.SendPropertyChanged("NoiDungDapAnSai");
					this.OnNoiDungDapAnSaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongDapAn", DbType="Int NOT NULL")]
		public int SoLuongDapAn
		{
			get
			{
				return this._SoLuongDapAn;
			}
			set
			{
				if ((this._SoLuongDapAn != value))
				{
					this.OnSoLuongDapAnChanging(value);
					this.SendPropertyChanging();
					this._SoLuongDapAn = value;
					this.SendPropertyChanged("SoLuongDapAn");
					this.OnSoLuongDapAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanLoaiDaySo", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhanLoaiDaySo
		{
			get
			{
				return this._PhanLoaiDaySo;
			}
			set
			{
				if ((this._PhanLoaiDaySo != value))
				{
					this.OnPhanLoaiDaySoChanging(value);
					this.SendPropertyChanging();
					this._PhanLoaiDaySo = value;
					this.SendPropertyChanged("PhanLoaiDaySo");
					this.OnPhanLoaiDaySoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuocKhoiLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ThuocKhoiLop
		{
			get
			{
				return this._ThuocKhoiLop;
			}
			set
			{
				if ((this._ThuocKhoiLop != value))
				{
					if (this._ClassList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThuocKhoiLopChanging(value);
					this.SendPropertyChanging();
					this._ThuocKhoiLop = value;
					this.SendPropertyChanged("ThuocKhoiLop");
					this.OnThuocKhoiLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SapXepThuTu", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int SapXepThuTu
		{
			get
			{
				return this._SapXepThuTu;
			}
			set
			{
				if ((this._SapXepThuTu != value))
				{
					this.OnSapXepThuTuChanging(value);
					this.SendPropertyChanging();
					this._SapXepThuTu = value;
					this.SendPropertyChanged("SapXepThuTu");
					this.OnSapXepThuTuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhamViPhepToan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PhamViPhepToan
		{
			get
			{
				return this._PhamViPhepToan;
			}
			set
			{
				if ((this._PhamViPhepToan != value))
				{
					this.OnPhamViPhepToanChanging(value);
					this.SendPropertyChanging();
					this._PhamViPhepToan = value;
					this.SendPropertyChanged("PhamViPhepToan");
					this.OnPhamViPhepToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauHoiHienThi", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CauHoiHienThi
		{
			get
			{
				return this._CauHoiHienThi;
			}
			set
			{
				if ((this._CauHoiHienThi != value))
				{
					this.OnCauHoiHienThiChanging(value);
					this.SendPropertyChanging();
					this._CauHoiHienThi = value;
					this.SendPropertyChanged("CauHoiHienThi");
					this.OnCauHoiHienThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoiGiaiCauHoi", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LoiGiaiCauHoi
		{
			get
			{
				return this._LoiGiaiCauHoi;
			}
			set
			{
				if ((this._LoiGiaiCauHoi != value))
				{
					this.OnLoiGiaiCauHoiChanging(value);
					this.SendPropertyChanging();
					this._LoiGiaiCauHoi = value;
					this.SendPropertyChanged("LoiGiaiCauHoi");
					this.OnLoiGiaiCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KetLuanCauHoi", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string KetLuanCauHoi
		{
			get
			{
				return this._KetLuanCauHoi;
			}
			set
			{
				if ((this._KetLuanCauHoi != value))
				{
					this.OnKetLuanCauHoiChanging(value);
					this.SendPropertyChanging();
					this._KetLuanCauHoi = value;
					this.SendPropertyChanged("KetLuanCauHoi");
					this.OnKetLuanCauHoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoiYTraLoi", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GoiYTraLoi
		{
			get
			{
				return this._GoiYTraLoi;
			}
			set
			{
				if ((this._GoiYTraLoi != value))
				{
					this.OnGoiYTraLoiChanging(value);
					this.SendPropertyChanging();
					this._GoiYTraLoi = value;
					this.SendPropertyChanged("GoiYTraLoi");
					this.OnGoiYTraLoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ClassList_BaiToanDaySo", Storage="_ClassList", ThisKey="ThuocKhoiLop", OtherKey="ClassListId", IsForeignKey=true)]
		public ClassList ClassList
		{
			get
			{
				return this._ClassList.Entity;
			}
			set
			{
				ClassList previousValue = this._ClassList.Entity;
				if (((previousValue != value) 
							|| (this._ClassList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ClassList.Entity = null;
						previousValue.BaiToanDaySos.Remove(this);
					}
					this._ClassList.Entity = value;
					if ((value != null))
					{
						value.BaiToanDaySos.Add(this);
						this._ThuocKhoiLop = value.ClassListId;
					}
					else
					{
						this._ThuocKhoiLop = default(string);
					}
					this.SendPropertyChanged("ClassList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
